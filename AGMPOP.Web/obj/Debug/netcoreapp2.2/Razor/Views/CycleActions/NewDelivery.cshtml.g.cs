#pragma checksum "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\CycleActions\NewDelivery.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f758e5b4fa3fbbf6aca862b09bd2f14342ec3ae4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CycleActions_NewDelivery), @"mvc.1.0.view", @"/Views/CycleActions/NewDelivery.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/CycleActions/NewDelivery.cshtml", typeof(AspNetCore.Views_CycleActions_NewDelivery))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\_ViewImports.cshtml"
using AGMPOP.Web;

#line default
#line hidden
#line 2 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\_ViewImports.cshtml"
using AGMPOP.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f758e5b4fa3fbbf6aca862b09bd2f14342ec3ae4", @"/Views/CycleActions/NewDelivery.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c3344144602cec692e91fef16bcf12fc0a4de791", @"/Views/_ViewImports.cshtml")]
    public class Views_CycleActions_NewDelivery : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/mobile/assets/css/site.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\CycleActions\NewDelivery.cshtml"
  

    ViewData["Title"] = "New Action";

#line default
#line hidden
            BeginContext(50, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(52, 61, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f758e5b4fa3fbbf6aca862b09bd2f14342ec3ae44639", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(113, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(189, 251, true);
            WriteLiteral("<div class=\"TopBar0 pl-4\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-3 col-6 align-self-center\">\r\n            <!-- Basic dropdown -->\r\n            <select id=\"SelectAgent\" class=\"mdb-select md-form\" onchange=\"showMessage()\">\r\n                ");
            EndContext();
            BeginContext(440, 55, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f758e5b4fa3fbbf6aca862b09bd2f14342ec3ae46265", async() => {
                BeginContext(475, 11, true);
                WriteLiteral("Choose user");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(495, 424, true);
            WriteLiteral(@"
            </select>
        </div>

        <div class=""col-md-9 col-6 text-md-right align-self-center"">
            <span class=""stock-card d-flex flex-column justify-content-center align-items-center float-right"" id=""AvailableStock"">

            </span>
        </div>
    </div>
    <div class=""row col-9""> <label id=""Msg"" class=""text-danger"" style=""display:none;"">Please Select User</label></div>
</div>
");
            EndContext();
            BeginContext(1004, 358, true);
            WriteLiteral(@"

<div class=""ContentAfterTopBar0"">
    <div class="" card card-body mb-2  pl-md-5 pr-md-5"" id=""trans_actions_container"">
        <h4 class=""text-center mb-4"">Products</h4>

    </div>
    <div class=""viewAll text-right mt-2 mb-3"">
        <input type=""button"" value=""Confirm"" class=""btn btn-primary"" onclick=""ConfirmAction()"" />
    </div>
</div>
");
            EndContext();
            BeginContext(1435, 8316, true);
            WriteLiteral(@"<div class=""modal fade"" id=""exampleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content mt-3 p-3"">
            <div class=""modal-body text-center"">
                <h3 class=""text-center""></h3>
                <a class=""m-1 px-3 btn btn-success"" data-dismiss=""modal"" style=""color:white"">Close</a>
            </div>
        </div>
    </div>
</div>
<style>
    .table tbody tr td {
        vertical-align: middle;
    }

    .product-img {
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
        border: 1px solid #ccc;
        border-radius: 50%;
        height: 50px;
        width: 50px;
        margin: 0 auto;
    }
</style>

<script>
    var ToId;

    $('#SelectAgent').on('change', function () {
        ToId = $('#SelectAgent').val()
    });
    // ================== JQUERY ================== //
    $(");
            WriteLiteral(@"document).ready(function () {
        $('.dataTables_length').addClass('bs-select');
        $(""select"").removeClass(""custom-select"");
        $(""#AvailableActions"").hide();
        $(""#hello1"").text(""New Delivery - Cycle Name Here"");
        GetUsers();
    });
    // ================== GLOBAL VARIABLES ================== //
    var x = Object.fromEntries(new URLSearchParams(location.search));
    var CycleID = x.cycleId;
    var ActionId = x.ActionId;
    // ================== GET AVAILABLE USERS FUNCTION ================== //
    function showMessage() {
        $(""#Msg"").css(""display"", ""none"");
    }

    function GetUsers() {
        var cycleid = CycleID;
        var actionId = ActionId;
        var Available_Agent = $(""#SelectAgent"");
        $.ajax({
            url: ""/CycleActions/GetUsersAction"",
            type: ""Get"",
            data: { cycleid, actionId},
            success: response => {
           //    console.log(response);

                if (response.data) {
");
            WriteLiteral(@"                    for (var item = 0; item < response.data.length; item++) {
                        var Agent = `<option class=""dropdown-item"" value ='${response.data[item].id}' > ${response.data[item].name} - <span class=""d-inline"" style=""opacity:0.5"">${response.data[item].jobTitleName}</span></option>`
                        Available_Agent.append(Agent);
                    }
                    var AvailableAmount = ` <h5>Available in hand</h5>
                                                        <span class=""SmallNum""><span class=""BigNum"">${response.remaining.remainingItems}</span>/${response.remaining.totalItems}</span>`
                    $(""#AvailableStock"").append(AvailableAmount);
                }
                else {
                    Available_Agent.empty();
                }
                GetTransactions();
                //  GetCycleTotalItems();
            },
        });

    }



    ///////////////////////////////////////////////// GET Transaction Products ");
            WriteLiteral(@"/////////////////

    function GetTransactions() {

        var cycleid = CycleID;
         var ValArray = [] , y;
        $.ajax({
            url: ""/CycleActions/GetUserClearanceProducts"",
            type: ""Get"",
            data: { cycleid },
            success: response => {
                console.log(response);
                 var header = ` <div class=""row"">
                                            <div class=""col-3 m-auto text-center"">
                                               <b>  Image </b>
                                            </div>
                                            <div class=""col-3 m-auto text-center"">
                                               <b>  Name </b>
                                            </div>
                                            <div class=""col-3 m-auto text-center"">
                                               <b> Code  </b>
                                            </div>
                                         ");
            WriteLiteral(@"   <div class=""col-3 m-auto text-center"">
                                              <b> Quantity  </b>
                                            </div>
                                        </div><hr />`

                $(""#trans_actions_container"").append(header);
                var res;
                res = response.data;
                if (res) {
                    for (let prod of res) {
                        if (prod.quantity > 0) {
                        var trans_action = ` <div class=""row"">
                                            <div class=""col-3 m-auto text-center"">
                                                <img src=""${prod.productImg}""  class=""img-circle product-img"">
                                            </div>
                                            <div class=""col-3 m-auto text-center"">
                                                <span>${prod.productName}</span>
                                            </div>
                          ");
            WriteLiteral(@"                  <div class=""col-3 m-auto text-center"">
                                                <span>${prod.code}</span>
                                            </div>

                                          <div class=""col-3  m-auto text-center"">
                                            <div class=""row"">
                                                <div class=""col-6  text-right"">
                                                    <input class=""ProductCount"" id=${prod.productId} type=""number"" data-trans=${prod.quantity} data-product=${prod.productId} name=""value"" maxlength=""4"" size=""1"" style=""height:40px; width:70px; text-align:center; font-size:16px; border-radius:5px;"" onKeyup=""checkValues(event)"" min=0 value=""0""> 

                                                </div>
                                                <div class=""col-6 text-left"">
                                                    <h4 class=""d-inline""> / ${prod.quantity}</h4>
                             ");
            WriteLiteral(@"                   </div>
                                        </div>
    
                                    </div>
                                        </div><hr />`

                        $(""#trans_actions_container"").append(trans_action);

                        y = `${prod.quantity}`
                        ValArray.push(y);
                    }
                    }

                }

                else {
                    $(""#Transactions"").append(`<div class=""alert alert-dark text-center"" style=""font-size:25px;"" role=""alert"">No Actions Available !!</div>`);
                }
                $('#dtBasicExample').DataTable();
                $("".loader"").fadeOut();

             },
        });

    }


    // ================== CONFIRM WITH VALIDATION FUNCTIONS ================== //

    function GetUserInputProductNum() {
        var ProductUserInputArray = [];

        for (let item of $("".ProductCount"")) {

            var Product = $(item);
        ");
            WriteLiteral(@"    var obj = {
                ""productId"": Product.data('product'),
                ""count"": Product.val()
            };
            if (obj.count > 0) {
                ProductUserInputArray.push(obj)
            }
        }
       //var filterData= ProductUserInputArray.filter(obj => { obj.count > 0 });
        return ProductUserInputArray;
    }

    function ConfirmAction() {

        var obj = {
            ""cycle_id"": CycleID,
            ""to_user_id"": ToId,
            ""action_id"": ActionId,
            ""transaction_items"": GetUserInputProductNum(),
        };

        var data =
            JSON.stringify(obj);
        if (ToId == null) {
            $(""#Msg"").css(""display"", ""inline-block"");
        }

        if (checkValues() == true && check == 1 && ToId) {

            Swal.fire({
                text: ""Are you sure to add this transaction ?"",
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Ok',

  ");
            WriteLiteral("          }).then((res) => {\r\n                if (res.value) {\r\n                    $.ajax({\r\n                        url: \'");
            EndContext();
            BeginContext(9752, 28, false);
#line 246 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\CycleActions\NewDelivery.cshtml"
                         Write(Url.Action("NewTransaction"));

#line default
#line hidden
            EndContext();
            BeginContext(9780, 629, true);
            WriteLiteral(@"',
                        type: ""POST"",
                        contentType: ""application/json"",
                        data: data,
                        success: data => {
                            if (data && data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    text: data.message,
                                    showConfirmButton: true,

                                }).then((result) => {
                                    if (result) {
                                        window.location.href = '");
            EndContext();
            BeginContext(10410, 24, false);
#line 259 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\CycleActions\NewDelivery.cshtml"
                                                           Write(Url.Action("CycleIndex"));

#line default
#line hidden
            EndContext();
            BeginContext(10434, 2219, true);
            WriteLiteral(@"'
                                    }
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    text: data.message,
                                });
                            }
                        },
                        error: function (x, y, z) {
                            Swal.fire({
                                icon: 'error',
                                text: err,
                                showConfirmButton: true,


                            });
                        }
                    });

                }
                else if (result.dismiss === swal.DismissReason.cancel) {

                }
            }
            )
        }
        else if (check == 0 && ToId != null) {

            swal.fire({
                text: 'Please add at least one item',

                icon: 'info',
    ");
            WriteLiteral(@"         //   buttonsStyling: false
            })
        }
    }




    //////////////////// Check values ///////////////
    var check = 0;

    function checkValues(e)
    {
        if (e) {
            var MaxValue = $(""#"" + e.target.id).data('trans');

            if (e.target.value > MaxValue) {
                $(""#"" + e.target.id).addClass('btn-danger')
                $(""#"" + e.target.id).val($(""#"" + e.target.id).data('trans'));
                setTimeout(function () { $(""#"" + e.target.id).removeClass('btn-danger') }, 1000);

                return false;
            }
            if (e.target.value == 0)
            {
                var sum = 0;
                var inputValue = $("".ProductCount"");
                for (var i = 0; i < inputValue.length; i++)
                {
                    sum  = sum + inputValue[i].value;
                }
                check = sum;
                return false;
            }
            else {
                $(""#"" + e.ta");
            WriteLiteral("rget.id).removeClass(\'btn-danger\');\r\n                check = 1;\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n</script>\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
