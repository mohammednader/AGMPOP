#pragma checksum "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\Transaction\NewTransaction.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4a29a365d1fc2c444aa68f37c92aff5532580eac"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Transaction_NewTransaction), @"mvc.1.0.view", @"/Views/Transaction/NewTransaction.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Transaction/NewTransaction.cshtml", typeof(AspNetCore.Views_Transaction_NewTransaction))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\_ViewImports.cshtml"
using AGMPOP.Web;

#line default
#line hidden
#line 2 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\_ViewImports.cshtml"
using AGMPOP.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4a29a365d1fc2c444aa68f37c92aff5532580eac", @"/Views/Transaction/NewTransaction.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c3344144602cec692e91fef16bcf12fc0a4de791", @"/Views/_ViewImports.cshtml")]
    public class Views_Transaction_NewTransaction : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
#line 3 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\Transaction\NewTransaction.cshtml"
  
    ViewData["Title"] = "New Transaction";

#line default
#line hidden
            BeginContext(55, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(57, 1717, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a29a365d1fc2c444aa68f37c92aff5532580eac4073", async() => {
                BeginContext(63, 274, true);
                WriteLiteral(@"
    <div class=""card card-body mt-2"">
        <div class=""row"">
            <div class=""form-group col-sm-4"">
                <label class=""control-label"">Cycle Name</label>
                <select name=""CycleId"" class=""mdb-select"" id=""cycleDDL"">
                    ");
                EndContext();
                BeginContext(337, 36, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a29a365d1fc2c444aa68f37c92aff5532580eac4740", async() => {
                    BeginContext(354, 10, true);
                    WriteLiteral("Select One");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(373, 317, true);
                WriteLiteral(@"

                </select>
                <span class=""text-danger"" id=""errDDL""></span>
            </div>
            <div class=""form-group col-sm-4"">
                <label class=""control-label""> Hr User</label>
                <select name=""UserId"" class=""mdb-select"" id=""UsersDDL"">
                    ");
                EndContext();
                BeginContext(690, 36, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4a29a365d1fc2c444aa68f37c92aff5532580eac6536", async() => {
                    BeginContext(707, 10, true);
                    WriteLiteral("Select One");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(726, 1041, true);
                WriteLiteral(@"
                </select>
                <span class=""text-danger"" id=""errDDL""></span>
            </div>
        </div>
    </div>
    <div class=""  my-3 "">
        <div class=""card Dfooter"" style=""display:none;"">
            <div class=""card-header "">
                <h5 class=""font-weight-bolder"">Add Products to the Cycle</h5>
            </div>
            <div class=""card-body "" id=""divResult""></div>
        </div>
    </div>

    <div class=""  my-3 "">
        <div class=""card Dfooter DfooterProduct"" style=""display:none;"">
            <div class=""card-header "">
                <h5 class=""font-weight-bolder"">Add New Products to the Cycle</h5>
            </div>
            <div class=""card-body "" id=""divResultNew"">

            </div>

        </div>

    </div>
    <div class=""text-right"">

        <button id=""save"" type=""button"" style=""display:none;"" class=""btn px-4 btn-primary about text-center mr-0"" onclick=""javascript:AddTransaction()"">
            Save
        </butt");
                WriteLiteral("on>\r\n    </div>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1774, 844, true);
            WriteLiteral(@"

<script>

    $().ready(function () {

        fillCyclesList();
        //save.hide();
        //getCycleUser()
        $(""#cycleDDL"").change(function () {
            $('#divResult').html(''); $('#divResultNew').html('');
            $("".DfooterProduct"").hide();
            $("".Dfooter"").hide( );
            $(""#save"").hide();
             getCycleUser();


        });



        //**  GET BBX For Assigning transaction  **//
        $(""#UsersDDL"").change(function () {
            var CycleId = $(""#cycleDDL"").val();
            var NewPoduct = false;

            $('#divResult').html(''); $('#divResultNew').html('');

            var userId = $(""#UsersDDL"").val();
            if (CycleId && userId) {
                //Get Partial for product cycle
                $.ajax({
                    url: '");
            EndContext();
            BeginContext(2619, 31, false);
#line 86 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\Transaction\NewTransaction.cshtml"
                     Write(Url.Action("_CycleProductList"));

#line default
#line hidden
            EndContext();
            BeginContext(2650, 508, true);
            WriteLiteral(@"',
                    method: 'Get',
                    data: { CycleId },
                    success: response => {
                        if (response) {
                            $("".DfooterProduct"").show();
                            $("".Dfooter"").show();
                            $(""#save"").show();
                            $('#divResult').html(response);
                            NewPoduct = true;

                            $.ajax({
                                url: '");
            EndContext();
            BeginContext(3159, 31, false);
#line 98 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\Transaction\NewTransaction.cshtml"
                                 Write(Url.Action("_CycleProductList"));

#line default
#line hidden
            EndContext();
            BeginContext(3190, 1237, true);
            WriteLiteral(@"',
                                method: 'Get',
                                data: { CycleId, NewPoduct },
                                success: response => {
                                    if (response) {

                                        $('#divResultNew').html(response);
                                    }
                                    else {
                                        $("".DfooterProduct"").hide();

                                    }
                                }
                                , error: function () {
                                    alert(""Error"");
                                }

                            });
                        }
                        else {
                            $(""#save"").hide();

                        }
                    }, error: function () {
                        alert(""Error"");
                    }
                });
                //Get partial for New Product
");
            WriteLiteral("\n\r\n            }\r\n\r\n\r\n        });\r\n    });\r\n\r\n\r\n     function fillCyclesList() {\r\n            var cycleDDL = $(\"#cycleDDL\");\r\n            cycleDDL.empty();\r\n\r\n\r\n                $.ajax({\r\n                    url: `");
            EndContext();
            BeginContext(4428, 41, false);
#line 141 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\Transaction\NewTransaction.cshtml"
                     Write(Url.Action("CurrentUserCycles", "Common"));

#line default
#line hidden
            EndContext();
            BeginContext(4469, 627, true);
            WriteLiteral(@"`,
                    method: 'Get',
                    success: function (res) {

                        if (res  ) {

                            ListFill(cycleDDL, res );
                        }
                    },
                    error: function (e) { console.log(""error"" + e) }
                })


        }
        function getCycleUser() {

            var CycleId = $(""#cycleDDL"").val();
            console.log(CycleId);
            var $list = $(""#UsersDDL"");
            $list.find(""option"").remove();
             if (CycleId) {
                $.ajax({
                    url: `");
            EndContext();
            BeginContext(5097, 23, false);
#line 163 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\Transaction\NewTransaction.cshtml"
                     Write(Url.Action("UserCycle"));

#line default
#line hidden
            EndContext();
            BeginContext(5120, 1013, true);
            WriteLiteral(@"?CycleId=${CycleId}`,
                    method: 'Get',
                    success: function (res) {
                        if (res && res.success && res.data) {

                            ListFill($list, res.data);
                        }
                    },
                    error: function (e) { console.log(""error"" + e) }
                })
            }
            else
            {
                ListFill($list, null, UserId);
            }
        }



        // fill DDL for users Cycle
        function ListFill($list, data) {

            console.log(data);
            $list.empty();
            var $option = $(""<option>"").text(""Select One"").val("""");
            $list.append($option);
            if (data) {
                for (let item of data) {
                    let $option = $(""<option>"").text(item.name).val(item.id);
                    $list.append($option);
                }   ;

            $list.materialSelect();
            } }

");
            EndContext();
            BeginContext(6177, 3095, true);
            WriteLiteral(@"    function AddTransaction() {

        var cycleId = $(""#cycleDDL"").val();
        var userId = $(""#UsersDDL"").val();
        console.log(cycleId, userId);

        var Arr = [];
        var checkValues = 0;
        var myTrackingContent = "" <div class='text-center mb-3'>  <h3>Review & Confirm </h3></div> <table class='table table-bordered' width='100%'>""
        //Adding Dynamic products from Action controller To DOM
        $("".product"").each(function (i, item) {
            var id = item.id;
            var name = item.name;
            var val = $(""#"" + item.id).val();
            if (val > 0) {
                checkValues++;
                Arr.push(id + "":"" + val);
                myTrackingContent += ""<tr><td class='text-center'><span>"" + name + ""</span></td> <td><span>"" + val + ""</span></td></tr>"";
            }
        });


        myTrackingContent += ""</table>"";
        if (checkValues > 0) {

            swal.fire({ 
                html: myTrackingContent,
          ");
            WriteLiteral(@"      icon: 'info',
                showCancelButton: true,
                confirmButtonText: 'Ok',

            }).then((result) => {
             if (result.value) {
                    if (cycleId && userId && Arr) {
                        $.ajax({
                            url: '/Transaction/NewTransaction',
                            type: ""POST"",
                            data: { cycleId, userId, Arr },
                            success: function (data) {
                                if (data && data.success) {
                                    Swal.fire({
                                        icon: 'success',
                                        text: data.message,
                                        showConfirmButton: true,

                                    }).then(setTimeout(() => { location.reload();},2000));
                                }
                                else {
                                    Swal.fire({
                        ");
            WriteLiteral(@"                icon: 'error',
                                        text: data.message,
                                        showConfirmButton: true,

                                    })

                                }
                            },
                            error: function (err) {
                                Swal.fire({
                                    icon: 'error',
                                    text: err,
                                    showConfirmButton: true,


                                });
                            }
                        });
                    }
                }

             else if (result.dismiss === swal.DismissReason.cancel) {

                }

            });
        }

        else if (checkValues == 0) {

                    swal.fire({
                        text: 'Please add at least one item',

                        icon: 'info',
                    })
                }
     ");
            WriteLiteral("       }\r\n\r\n</script>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
