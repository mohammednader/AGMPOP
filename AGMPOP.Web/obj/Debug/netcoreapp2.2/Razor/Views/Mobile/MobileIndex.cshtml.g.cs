#pragma checksum "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\Mobile\MobileIndex.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ec4140ef8c984aa1b0e3d2278b2e34dcd1f9672f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Mobile_MobileIndex), @"mvc.1.0.view", @"/Views/Mobile/MobileIndex.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Mobile/MobileIndex.cshtml", typeof(AspNetCore.Views_Mobile_MobileIndex))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\_ViewImports.cshtml"
using AGMPOP.Web;

#line default
#line hidden
#line 2 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\_ViewImports.cshtml"
using AGMPOP.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ec4140ef8c984aa1b0e3d2278b2e34dcd1f9672f", @"/Views/Mobile/MobileIndex.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c3344144602cec692e91fef16bcf12fc0a4de791", @"/Views/_ViewImports.cshtml")]
    public class Views_Mobile_MobileIndex : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/mobile/assets/css/site.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\Mobile\MobileIndex.cshtml"
  
    ViewData["Title"] = "Home";

#line default
#line hidden
            BeginContext(40, 1, true);
            WriteLiteral(" ");
            EndContext();
            BeginContext(41, 61, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "ec4140ef8c984aa1b0e3d2278b2e34dcd1f9672f4057", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(102, 5552, true);
            WriteLiteral(@"
<div class=""mb-5 ""  >
    <div id=""cyclelist"">
        <a href=""../Mobile/CycleName?cycleId=8"">
            <div class=""card card-body mb-2 Home"" style=""cursor:pointer"">
                <div class=""row"">
                    <div class=""col-3 col-xl-1 text-md-center d-flex justify-content-md-left align-items-md-left"">
                        <span class=""LeftCardLogo"">N</span>
                    </div>
                    <div class=""col-7 col-xl-10 d-flex flex-column justify-content-center"">
                        <label>02/12/2019  - 31/01/2020</label>
                        <h4>Test Cycle  &nbsp;<i class=""fas fa-circle"" style=""font-size:18px;""></i></h4>
                    </div>
                    <div class=""col-2 col-xl-1 d-flex flex-column justify-content-center text-center"">
                        <i class=""fas fa-chevron-right""></i>
                    </div>
                </div>
            </div>
        </a>
    </div>
</div>
<style>
    .Home {
        transition: 0.");
            WriteLiteral(@"2s all;
    }

        .Home:hover {
            transform: scale(1.005);
        }

        .Home label {
            cursor: pointer;
        }
</style>
<script>
    // ================== JQUERY ================== //
    $(document).ready(function () {
        $(""#AvailableActions"").hide();
        $("".SideNav a:nth(0)"").addClass(""activated"");
        $("".SideNav i:nth(0)"").css(""color"", ""white"");
        GetCycleList();
    });

    // ================== 1- GET CYCLES LIST FUNCTIONS ================== //

    async function GetCycleList() {
        var currLocation = await getCurrentLocation();
        var userlat = currLocation.latitude;
        var userlng = currLocation.longitude;
        const APIurl = BaseAPIurl + userlat + ""/"" + userlng + ""/"" + DeviceId + ""/"" + userID + ""/cycles?Page="" + 1 + ""&Limit="" + 20;
        var divCycleList = $('#cyclelist');
        divCycleList.empty();

        let apiResponse = await fetch(proxyurl + APIurl, {
            method: 'GET',
    ");
            WriteLiteral(@"        headers: {
                'Authorization': 'Bearer ' + AccessToken,
                'Accept': 'application/json',
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*',
            },
        });

        var res;
        if (apiResponse.ok) {

            res = await apiResponse.json();
            if (res[""data""].length > 0) {
                for (i = 0; i < res[""data""].length; i++) {
                    var cycletype = res[""data""][i].type.id == 0 ? ""N"" : ""E"";
                    var cycleDetailsDiv = `
                            <a  href=""../Mobile/CycleName?cycleId=${res[""data""][i].id}"">
                                <div class=""card card-body mb-2 Home"" style=""cursor:pointer"">
                                <div class=""row"">
                            <div class=""col-3 col-xl-1 text-md-center d-flex justify-content-md-left align-items-md-left"">
                                <span class=""LeftCardLogo"">${cycletype}</span >");
            WriteLiteral(@"
                            </div>
                            <div class=""col-7 col-xl-10 d-flex flex-column justify-content-center"">
                                <label>${moment(res[""data""][i].start_date).format('DD/MM/YYYY')}  - ${moment(res[""data""][i].end_date).format('DD/MM/YYYY')}</label>
                                <h4>${res[""data""][i].name} &nbsp;${res[""data""][i].pending_transactions == true ? `<i class=""fas fa-circle"" style=""font-size:15px;""></i>` : `<i class=""fas fa-circle d-none""></i>`}</h4>
                            </div>
                            <div class=""col-2 col-xl-1 d-flex flex-column justify-content-center text-center"">
                                <i class=""fas fa-chevron-right""></i>
                            </div>
                        </div>
                    </div></a>`
                    divCycleList.append(cycleDetailsDiv);
                }
            }
            else if (res[""data""].length == 0) {
                divCycleList.append(`<div ");
            WriteLiteral(@"class=""alert alert-dark text-center"" style=""font-size:25px;"" role=""alert"">Sorry ,, No cycles Found !!</div>`);
            }
        }
        GetNotificationsList();
    }
    // ====================== 2- NOTIFICATION VIBRATE FUNCTION ==========================//
    async function GetNotificationsList() {

        var currLocation = await getCurrentLocation();
        var userlat = currLocation.latitude;
        var userlng = currLocation.longitude;
        const userType = localStorage.getItem('type');
        const APIurl = BaseAPIurl + userlat + ""/"" + userlng + ""/"" + DeviceId + ""/"" + ""users/"" + userID + ""/notification"" + ""?Page=1&Limit=200""
        let apiResponse = await fetch(proxyurl + APIurl, {
            method: 'GET',
            headers: {
                'Authorization': 'Bearer ' + AccessToken,
                'Accept': 'application/json',
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*',
            },
        });
    ");
            WriteLiteral(@"    var res;
        if (apiResponse.ok) {

            res = await apiResponse.json();
            if (res.data && res.data.length) {
                for (i = 0; i < res.data.length; i++) {
                    if (res.data[i].IsSeen == false) {
                        $("".fa-bell"").addClass(""NotificationTrue"");
                    }
                }
            }
        } $("".loader"").fadeOut();
    }
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
