#pragma checksum "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\Mobile\NewDeliveryConfirmation.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fff75078dca7513f81e80301b9123e13ab699186"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Mobile_NewDeliveryConfirmation), @"mvc.1.0.view", @"/Views/Mobile/NewDeliveryConfirmation.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Mobile/NewDeliveryConfirmation.cshtml", typeof(AspNetCore.Views_Mobile_NewDeliveryConfirmation))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\_ViewImports.cshtml"
using AGMPOP.Web;

#line default
#line hidden
#line 2 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\_ViewImports.cshtml"
using AGMPOP.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fff75078dca7513f81e80301b9123e13ab699186", @"/Views/Mobile/NewDeliveryConfirmation.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c3344144602cec692e91fef16bcf12fc0a4de791", @"/Views/_ViewImports.cshtml")]
    public class Views_Mobile_NewDeliveryConfirmation : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/mobile/assets/css/site.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\Mobile\NewDeliveryConfirmation.cshtml"
  
    ViewData["Title"] = "New Delivery Confirmation";

#line default
#line hidden
            BeginContext(63, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(65, 61, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "fff75078dca7513f81e80301b9123e13ab6991864278", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(126, 2165, true);
            WriteLiteral(@"
<!--TOP BAR-->
<div class=""TopBar0 pl-4"" style=""padding:10px;"">
    <div class=""row"">
        <div class=""col-8 col-lg-9 d-flex flex-column justify-items-center align-self-center cycleDetails"">
            <div class=""pb-2""><h2 class=""d-inline"">Cycle Name</h2> <h5 class=""d-inline"">(hello)</h5></div>
            <label> &nbsp; 01/01/2018 - 31/03/2018</label>
            <label> &nbsp; From : mohamed kamal</label>
        </div>
        <div class=""col-4 col-lg-3 text-right align-self-center"">
            <!-- Horizontal Steppers -->
            <div class=""row"">
                <div class=""col-md-12"">
                    <!-- Stepers Wrapper -->
                    <ul class=""stepper stepper-horizontal"">

                        <!-- First Step -->
                        <li class=""active"">

                            <a href=""NewDeliveryConfirmation"">
                                <span class=""circle"">1</span>
                            </a>
                        </li>

       ");
            WriteLiteral(@"                 <!-- Second Step -->
                        <li class=""disabled"">
                            <a href=""NewDeliveryConfirmation2Step"">
                                <span class=""circle"">2</span>
                            </a>
                        </li>

                        <!-- Third Step -->
                        <li class=""disabled"">
                            <a href=""NewDeliveryConfirmation3Step"">
                                <span class=""circle"">3</span>
                            </a>
                        </li>
                    </ul>
                    <!-- /.Stepers Wrapper -->

                </div>
            </div>
            <!-- /.Horizontal Steppers -->
        </div>
    </div>
</div>
<!-- Content After Top Bar First Step Clearance -->

<div class=""ContentAfterTopBar FirstStep"">
    <label class=""p-2"">BBO’s & Products I have</label>
    <div class="" card card-body mb-4  pl-md-5 pr-md-5"" id=""Clearance"">

    </div>
    <div");
            WriteLiteral(" class=\"viewAll text-right mt-3 mb-3\">\r\n    </div>\r\n</div>\r\n<!-- Content After Top Bar Second Step Confirmation -->\r\n");
            EndContext();
            BeginContext(3418, 3450, true);
            WriteLiteral(@"

<div class=""ContentAfterTopBar SecondStep d-none"">
    <h6 class=""text-center"">Please review the data below</h6>
    <label class=""p-2"">Added BBO’s & Products</label>

    <div class="" card card-body mb-4  pl-md-5 pr-md-5"" id=""DeliveryItems"">
    </div>

    <div class=""viewAll2 text-right mt-3 mb-3"">
        <button class=""UndoFirstButton"" onclick=""UndoFirstButton()"" style=""background-color:#848484;"">Back</button> <button class=""UndoSecondButton"" onclick=""UndoSecondButton()"" style=""background-color:#848484;"">Back</button>   <button class=""ThirdStepBtn d-none"" onclick=""ConfirmBtn()"">Confirm</button>
    </div>

</div>
<!--============================== Modal =================================-->
<div class=""modal fade"" id=""exampleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content mt-3 p-3"">
            <div class=""modal-body text-center"">
                <h3 class=""text-");
            WriteLiteral(@"center""></h3>
                <a class=""m-1 px-3 btn btn-success"" data-dismiss=""modal"" style=""color:white"">Close</a>
            </div>
        </div>
    </div>
</div>
<style>
    .table tbody tr td {
        vertical-align: middle;
    }
</style>

<script>
    // ================== JQUERY ================== //

    $(document).ready(function () {
        $('.dataTables_length').addClass('bs-select');
        $(""select"").removeClass(""custom-select"");
        $(""#AvailableActions"").hide();
        $(""#hello1"").text(""New Delivery Confirmation"");
        $("".cycleDetails"").empty();
        GetCycleName();
    });

    // ================== BUTTONS FUNCTIONS ================== //

    function SecondButton() {
        $("".FirstStep"").removeClass(""d-none"");
        $("".FirstStep .viewAll"").addClass(""d-none"");
        $("".SecondStep "").addClass(""mt-3"");
        $("".TopBar0 ul li:nth-of-type(3)"").removeClass(""disabled"").addClass(""active"")
        $(""button.ThirdStepBtn"").removeClass(""");
            WriteLiteral(@"d-none"");
        $("".SecondStep .viewAll2 .SecondStepBtn"").addClass(""d-none"");
        $("".UndoFirstButton"").addClass(""d-none"");
        $("".UndoSecondButton"").removeClass(""d-none"");
    }
    function UndoFirstButton() {
        $("".FirstStep"").removeClass(""d-none"");
        $("".SecondStep"").addClass(""d-none"");
        $("".TopBar0 ul li:nth-of-type(2)"").removeClass(""active"").addClass(""disabled"")
        $("".FirstStep input"").attr(""readonly"", false);

    }
    function UndoSecondButton() {
        $("".FirstStep"").addClass(""d-none"");
        $("".FirstStep .viewAll"").removeClass(""d-none"");
        $("".SecondStep "").removeClass(""mt-3"");
        $("".TopBar0 ul li:nth-of-type(3)"").addClass(""disabled"").removeClass(""active"")
        $(""button.ThirdStepBtn"").addClass(""d-none"");
        $("".SecondStep .viewAll2 .SecondStepBtn"").removeClass(""d-none"");
        $("".UndoFirstButton"").removeClass(""d-none"");
        $("".UndoSecondButton"").addClass(""d-none"");
    }

    // ================== GLOBAL V");
            WriteLiteral(@"ARIABLES ================== //
    var x = Object.fromEntries(new URLSearchParams(location.search));
    var NotificationID = x.NotificationId;
    var CycleID = x.CycleId;
    var TransID = x.TransactionId;
    // ================== GET CYCLE NAME ================== //

    function GetCycleName() {
        var cycleId = CycleID;
        $.ajax({
            url: '");
            EndContext();
            BeginContext(6869, 42, false);
#line 176 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\Mobile\NewDeliveryConfirmation.cshtml"
             Write(Url.Action("GetCycleName", "Notification"));

#line default
#line hidden
            EndContext();
            BeginContext(6911, 16870, true);
            WriteLiteral(@"',
            type: ""Get"",
            data: { cycleId },
            success: response => {
                var res = response;
                if (res) {
                    var cycletype = res.type.id == 0 ? ""NW"" : ""Ev"";
                    var CycleName = `<h2 style=""display:contents"">${res.name}</h2><label style=""display:contents; font-size : 16px"" > - ${cycletype}</label>
                    <label class=""mt-2"">${moment(res.start_date).format('DD/MM/YYYY')} - ${moment(res.end_date).format('DD/MM/YYYY')}</label>`
                    $("".cycleDetails"").append(CycleName);
                }
                else {
                    $("".cycleDetails"").append(""ERROR"");
                }
              //  GetCycleDetails();
            },

        });

    }
    //async function GetCycleName() {

    //    var currLocation = await getCurrentLocation();
    //    var userlat = currLocation.latitude;
    //    var userlng = currLocation.longitude;
    //    const APIurl = BaseAPIurl + ");
            WriteLiteral(@"userlat + ""/"" + userlng + ""/"" + DeviceId + ""/"" + userID + ""/cycles/"" + CycleID;

    //    let apiResponse = await fetch(proxyurl + APIurl, {
    //        method: 'GET',
    //        headers: {
    //            'Authorization': 'Bearer ' + AccessToken,
    //            'Accept': 'application/json',
    //            'Content-Type': 'application/json',
    //            'Access-Control-Allow-Origin': '*',
    //        },
    //    });

    //    var res;
    //    if (apiResponse.ok) {
    //        res = await apiResponse.json();
    //        if (res.data) {
    //            var cycletype = res.data.type.id == 0 ? ""NW"" : ""Ev"";
    //            var CycleName = `<h2 style=""display:contents"">${res.data.name}</h2><label style=""display:contents; font-size : 16px"" > - ${cycletype}</label>
    //                <label class=""mt-2"">${moment(res.data.start_date).format('DD/MM/YYYY')} - ${moment(res.data.end_date).format('DD/MM/YYYY')}</label>`
    //            $("".cycleDetails"").append(Cycl");
            WriteLiteral(@"eName);
    //        }
    //        else {
    //            $("".cycleDetails"").append(""ERROR"");
    //        }
    //    } GetCycleDetails()
    //}
    // ================== GET CYCLE DETAILES ================== //

    async function GetCycleDetails() {

        var currLocation = await getCurrentLocation();
        var userlat = currLocation.latitude;
        var userlng = currLocation.longitude;
        var x = Object.fromEntries(new URLSearchParams(location.search));
        var CycleID = x.cycleId;
        var TransID = x.TransactionId;
        if (!TransID) {
            return;
        }
        const APIurl = BaseAPIurl + userlat + ""/"" + userlng + ""/"" + DeviceId + ""/"" + userID + ""/transcations/"" + TransID;

        let apiResponse = await fetch(proxyurl + APIurl, {
            method: 'GET',
            headers: {
                'Authorization': 'Bearer ' + AccessToken,
                'Accept': 'application/json',
                'Content-Type': 'application/json',
 ");
            WriteLiteral(@"               'Access-Control-Allow-Origin': '*',
            },
        });

        var res;
        if (apiResponse.ok) {
            res = await apiResponse.json();
            if (res.data) {
                //append total items
                var AvailableItems = `${res.data.total_items}`
                $("".BigNum"").append(AvailableItems);
                //append cycle name & date
                var CycleDetails = ` ${res.data.from.user_id == userID ? `<label><b>to : </b> ${res.data.to.Full_Name}</label>` : `<label><b>from: </b> ${res.data.from.Full_Name}</label>`}`
                $("".cycleDetails"").append(CycleDetails);
            }
            else {
                $("".cycleDetails"").append(""ERROR"");
            }
        } Clearance()
        ShowNotification()
    }

    // ================== CLEARANCE PRODUCTS FUNCTION ================== //
    var ValArray = [],
        y;

    async function Clearance() {
        var currLocation = await getCurrentLocation();
 ");
            WriteLiteral(@"       var userlat = currLocation.latitude;
        var userlng = currLocation.longitude;
        var x = Object.fromEntries(new URLSearchParams(location.search));
        var CycleID = x.CycleId;
        var TransID = x.TransactionId;
        const APIurl = BaseAPIurl + userlat + ""/"" + userlng + ""/"" + DeviceId + ""/"" + userID + ""/transcations/"" + ""items/"" + CycleID + ""?AllItems=false"";

        let apiResponse = await fetch(proxyurl + APIurl, {
            method: 'GET',
            headers: {
                'Authorization': 'Bearer ' + AccessToken,
                'Accept': 'application/json',
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*',
            }
        });

        var res;
        if (apiResponse.ok) {
            res = await apiResponse.json();
            if (res.data && res.data.length) {

                for (i = 0; i < res.data.length; i++) {
                    var addDelivery = `<div class=""row"">
              ");
            WriteLiteral(@"                              <div class=""col-2 m-auto"">
                                                <img src=""${res.data[i].product.image}"" style=""border-radius:50%"" width=""80"" height=""80"">
                                            </div>
                                            <div class=""col-3 m-auto"">
                                                <h4>${res.data[i].product.name}</h4>
                                            </div>
                                            <div class=""col-3 m-auto"">
                                                <h4>${res.data[i].product.code}</h4>
                                            </div>
                                            <div class=""col-2 m-auto"">
                                                <h4>${res.data[i].product.type.name}</h4>
                                            </div>
                                            <div class=""col-2 text-md-right m-auto"">
                                                <input");
            WriteLiteral(@" class=""ProductCount"" type=""text"" max=""${res.data[i].available_items}"" name=""value"" maxlength=""4"" data-product=""${res.data[i].product.id}"" size=""1"" style=""height:40px; width:70px; text-align:center; font-size:18px; border-radius:5px;"" value=""0"" > <h4 class=""d-inline""> &nbsp;/ </h4>
                                                <h4 class=""d-inline"">${res.data[i].available_items}</h4>
                                            </div>
                                        </div><hr />`



                    y = `${res.data[i].available_items}`
                    ValArray.push(y);
                    $(""#Clearance"").append(addDelivery);

                }
                var ConfirmBtn = `<button onclick="" NextBtn()"">Next</button> `
                $("".viewAll"").append(ConfirmBtn);
            }
            else {
                $(""#Clearance"").append(`<div class=""alert alert-dark text-center"" style=""font-size:25px;"" role=""alert""> No Clearance Needed !! </div>`);
                var Confi");
            WriteLiteral(@"rmBtn = ` <a href=""NewDeliveryConfirmation2Step?TransactionId=${TransID}&cycleId=${CycleID}""><button>Next</button></a>`
                $("".viewAll"").append(ConfirmBtn);
            }
            DeliveryConfirm()
        }

    }
    // ================== GET NEW ITEMS TO RECIVE AND CONFIRM FUNCTION ================== //
    async function DeliveryConfirm() {

        var currLocation = await getCurrentLocation();
        var userlat = currLocation.latitude;
        var userlng = currLocation.longitude;
        var x = Object.fromEntries(new URLSearchParams(location.search));
        var CycleID = x.cycleId;
        var TransID = x.TransactionId;
        const APIurl = BaseAPIurl + userlat + ""/"" + userlng + ""/"" + DeviceId + ""/"" + userID + ""/transcations/"" + TransID;

        let apiResponse = await fetch(proxyurl + APIurl, {
            method: 'GET',
            headers: {
                'Authorization': 'Bearer ' + AccessToken,
                'Accept': 'application/json',
         ");
            WriteLiteral(@"       'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*',
            }
        });

        var res;
        if (apiResponse.ok) {
            res = await apiResponse.json();
            if (res.data) {
                for (i = 0; i < res.data.items.length; i++) {
                    var addDelivery = `<div class=""row"">
                                            <div class=""col-2 m-auto"">
                                                <img src=""${res.data.items[i].product.image}"" style=""border-radius:50%"" width=""80"" height=""80"">
                                            </div>
                                            <div class=""col-3 m-auto"">
                                                <h4>${res.data.items[i].product.name}</h4>
                                            </div>
                                            <div class=""col-3 m-auto"">
                                                <h4>#${res.data.items[i].product.code}</h4>
   ");
            WriteLiteral(@"                                         </div>
                                            <div class=""col-2 m-auto"">
                                                <h4>${res.data.items[i].product.type.name}</h4>
                                            </div>
                                            <div class=""col-2 text-md-right m-auto"">
                                            <span class=""d-inline ProductsNum"">${res.data.items[i].total_items}</span>

                                            </div>
                                        </div><hr />`
                    $(""#DeliveryItems"").append(addDelivery);
                }
                var ConfirmBtn = ` <button class=""SecondStepBtn"" onclick=""SecondButton()"">Next</button> `
                $("".viewAll2"").append(ConfirmBtn);
            }
            else {
                $(""#Requests"").append(`<div class=""alert alert-dark text-center"" style=""font-size:25px;"" role=""alert""> No Requests found !! </div>`);
             ");
            WriteLiteral(@"   var ConfirmBtn = `<button class=""SecondStepBtn"" onclick=""SecondButton()"">Next</button> `
                $("".viewAll2"").append(ConfirmBtn);
            }
        } $('#dtBasicExample2').DataTable();
        $("".loader"").fadeOut();
    }

    // ================== VALIDATION FUUNCTION ================== //
    async function NextBtn() {

        var clearanceItems = [];
        function GetProductVal() {
            for (let item of $("".ProductCount"")) {
                var x = $(item)
                var obj = {
                    ""product_id"": x.data('product'),
                    ""count"": x.val()
                };
                clearanceItems.push(obj)
            }
        } GetProductVal();

        function Validation_Function() {

            function FirstButton() {
                $("".FirstStep"").addClass(""d-none"");
                $("".SecondStep"").removeClass(""d-none"");
                $("".TopBar0 ul li:nth-of-type(2)"").removeClass(""disabled"").addClass(""active"")
  ");
            WriteLiteral(@"              $("".FirstStep input"").attr(""readonly"", true);
                $("".UndoSecondButton"").addClass(""d-none"");
            }

            var AllProductValueEntered = [];

            for (i = 0; i < clearanceItems.length; i++)
                if (clearanceItems[i].count != """" && clearanceItems[i].count != null) {
                    AllProductValueEntered.push(clearanceItems[i]);
                } else {
                    $("".modal-body h3"").text(""Please complete Products numbers1"").addClass(""success"");
                    $(""#exampleModal"").modal(""show"");
                    break;
                }
            if (clearanceItems.length == AllProductValueEntered.length) {
                var SumOfAllProducts = 0;
                var d;
                var e = [];
                for (i = 0; i < AllProductValueEntered.length; i++) {
                    if (Number(AllProductValueEntered[i].count) <= Number(ValArray[i]) && Number(AllProductValueEntered[i].count) >= 0) {
          ");
            WriteLiteral(@"              d = Number(AllProductValueEntered[i].count);
                        e.push(d);
                        SumOfAllProducts += Number(AllProductValueEntered[i].count);

                        if (e.length == AllProductValueEntered.length) {
                            if (SumOfAllProducts > 0) {
                                FirstButton();
                            } else {
                                $("".modal-body h3"").text(""Error! .. you should enter a quantity for one product at least"").addClass(""success"");
                                $(""#exampleModal"").modal(""show"");
                            }
                        }
                    } else {
                        $("".modal-body h3"").text(""Error! .. transferred quantities should not exceed available ones"").addClass(""success"");
                        $(""#exampleModal"").modal(""show"");
                        break;
                    }
                }
            } else {
                $("".modal-bo");
            WriteLiteral(@"dy h3"").text(""Every product should have quantity"").addClass(""success"");
                $(""#exampleModal"").modal(""show"");
            }
        } Validation_Function()
    }

    // ================== CONFIRM FUUNCTION ================== //
    async function ConfirmBtn() {
        $("".loader"").fadeIn();
        var currLocation = await getCurrentLocation();
        var userlat = currLocation.latitude;
        var userlng = currLocation.longitude;
        const APIurl = BaseAPIurl + userlat + ""/"" + userlng + ""/"" + DeviceId + ""/"" + userID + ""/transcations/"" + TransID + ""/approve"";

        var clearanceItems = [];
        function GetProductVal() {
            for (let item of $("".ProductCount"")) {
                var x = $(item)

                var obj = {
                    ""product_id"": x.data('product'),
                    ""count"": x.val()
                };

                clearanceItems.push(obj)
            }
        } GetProductVal();

        let apiResponse = await fet");
            WriteLiteral(@"ch(proxyurl + APIurl, {
            method: 'POST',
            headers: {
                'Authorization': 'Bearer ' + AccessToken,
                //'Accept': 'application/json',
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*',
            },
            body: JSON.stringify(clearanceItems)
        });

        var res;
        if (apiResponse.ok) {

            res = await apiResponse.json();
            if (res[""data""] != null) {
                $(""#exampleModal"").empty();
                var modal = `<div class=""modal-dialog"" role=""document"">
                        <div class=""modal-content mt-3 p-3"">
                            <div class=""modal-body text-center"">
                                <h3 class=""text-center""></h3>
                                <a class=""m-1 px-3 btn btn-success"" href=""CycleName?cycleId=${CycleID}"">Close</a>
                            </div>
                        </div>
                    </d");
            WriteLiteral(@"iv> `
                $(""#exampleModal"").append(modal);
                $("".loader"").fadeOut();
                $("".modal-body h3"").text(""Confirmed"").addClass(""success"")
                $(""#exampleModal"").modal(""show"");

            } else {
                $("".loader"").fadeOut();
                $("".modal-body"").text(""Failed"").addClass(""danger"")
                $(""#exampleModal"").modal(""show"");
            }
        }
    }

    // ================== NOTIFICATION FUUNCTION ================== //
    async function ShowNotification() {
        var currLocation = await getCurrentLocation();
        var userlat = currLocation.latitude;
        var userlng = currLocation.longitude;
        const APIurl = BaseAPIurl + userlat + ""/"" + userlng + ""/"" + DeviceId + ""/users/"" + userID + ""/notification/"" + NotificationID;

        let apiResponse = await fetch(proxyurl + APIurl, {
            method: 'POST',
            headers: {
                'Authorization': 'Bearer ' + AccessToken,
        ");
            WriteLiteral(@"        //'Accept': 'application/json',
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*',
            },
            body: JSON
        });

        var res;
        if (apiResponse.ok) {
            res = await apiResponse.json();
            if (res[""data""] != null) {
                console.log(res[""data""])
            } else {
                console.log(""false"")
            }
        }
    }

</script>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
