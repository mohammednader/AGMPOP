#pragma checksum "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\Mobile\AvailableStocks.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8cd0e3675891960eab30e6584c0ac473b9a11361"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Mobile_AvailableStocks), @"mvc.1.0.view", @"/Views/Mobile/AvailableStocks.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Mobile/AvailableStocks.cshtml", typeof(AspNetCore.Views_Mobile_AvailableStocks))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\_ViewImports.cshtml"
using AGMPOP.Web;

#line default
#line hidden
#line 2 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\_ViewImports.cshtml"
using AGMPOP.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8cd0e3675891960eab30e6584c0ac473b9a11361", @"/Views/Mobile/AvailableStocks.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c3344144602cec692e91fef16bcf12fc0a4de791", @"/Views/_ViewImports.cshtml")]
    public class Views_Mobile_AvailableStocks : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/mobile/assets/css/site.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\Mobile\AvailableStocks.cshtml"
  
    ViewData["Title"] = "Available Items";

#line default
#line hidden
            BeginContext(53, 61, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "8cd0e3675891960eab30e6584c0ac473b9a113614102", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(114, 3347, true);
            WriteLiteral(@"
<!--Content After Top Bar-->
<div class=""ContentAfterTopBar mb-4"">
    <div class="" card card-body mb-4  pl-md-5 pr-md-5 AvailableStocks"">

    </div>
</div>
<script>
    // ====================== JQUERY ==========================//
    $(document).ready(function () {
        $('.dataTables_length').addClass('bs-select');
        $(""select"").removeClass(""custom-select"");
        $(""#AvailableActions"").hide();
        GetTransactionDetails();
    });
    // ====================== GET TRANSACTION LIST ==========================//
    async function GetTransactionDetails() {
        var currLocation = await getCurrentLocation();
        var userlat = currLocation.latitude;
        var userlng = currLocation.longitude;
        var CycleID = location.search.substring(1).split('=')[1];
        const APIurl = BaseAPIurl + userlat + ""/"" + userlng + ""/"" + DeviceId + ""/"" + userID + ""/transcations/"" + ""items/"" + CycleID + ""?AllItems=true"";
        var AccessToken = sessionStorage.getItem('AccessTo");
            WriteLiteral(@"ken');
        let apiResponse = await fetch(proxyurl + APIurl, {
            method: 'GET',
            headers: {
                'Authorization': 'Bearer ' + AccessToken,
                'Accept': 'application/json',
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*',
            }
        });

        var res;
        if (apiResponse.ok) {

            res = await apiResponse.json();
            if (res.data && res.data.length) {

                for (i = 0; i < res.data.length; i++) {
                    var addDelivery = `<div class=""row"">
                                            <div class=""col-2 m-auto"">
                                                <img src=""${res.data[i].product.image}"" style=""border-radius:50%"" width=""80"" height=""80"">
                                            </div>
                                            <div class=""col-3 m-auto"">
                                                <h4>${res.data[i].");
            WriteLiteral(@"product.name}</h4>
                                            </div>
                                            <div class=""col-3 m-auto"">
                                                <h4>${res.data[i].product.code}</h4>
                                            </div>
                                            <div class=""col-2 m-auto"">
                                                <h4>${res.data[i].product.type.name}</h4>
                                            </div>
                                            <div class=""col-2 text-md-right m-auto"">
                                                <input type=""text"" name=""value"" maxlength=""4"" size=""1"" style=""height:40px; width:70px; text-align:center; font-size:18px; border-radius:5px;"" value=""4"" readonly=""""> <h4 class=""d-inline""> &nbsp;/ </h4>
                                                <h4 class=""d-inline"">${res.data[i].total_items}</h4>
                                            </div>
                                     ");
            WriteLiteral(@"   </div><hr />`
                    $("".AvailableStocks"").append(addDelivery);
                }
            }
            else {
                $("".AvailableStocks"").append(""ERROR"");
            }
        }
        $("".loader"").fadeOut();
    }
</script>



");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
