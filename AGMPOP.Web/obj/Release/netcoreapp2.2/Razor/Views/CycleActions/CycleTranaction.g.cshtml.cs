#pragma checksum "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\CycleActions\CycleTranaction.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "55d4578d18b608c27d8840483fd0cec6dbf3d8dd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CycleActions_CycleTranaction), @"mvc.1.0.view", @"/Views/CycleActions/CycleTranaction.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/CycleActions/CycleTranaction.cshtml", typeof(AspNetCore.Views_CycleActions_CycleTranaction))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\_ViewImports.cshtml"
using AGMPOP.Web;

#line default
#line hidden
#line 2 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\_ViewImports.cshtml"
using AGMPOP.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"55d4578d18b608c27d8840483fd0cec6dbf3d8dd", @"/Views/CycleActions/CycleTranaction.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c3344144602cec692e91fef16bcf12fc0a4de791", @"/Views/_ViewImports.cshtml")]
    public class Views_CycleActions_CycleTranaction : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/mobile/assets/css/site.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\CycleActions\CycleTranaction.cshtml"
  
    ViewData["Title"] = "CycleTranaction";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(100, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 7 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\CycleActions\CycleTranaction.cshtml"
  
    ViewData["Title"] = "";

#line default
#line hidden
            BeginContext(138, 61, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "55d4578d18b608c27d8840483fd0cec6dbf3d8dd4455", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(199, 3524, true);
            WriteLiteral(@"
<div class=""text-right mb-1"">

    <section class=""dropdown d-inline-block"">
        <button class=""btn btn-primary"" type=""button"" id=""AvailableActions"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false"">
            Actions &nbsp; <i class=""fas fa-plus fa-1x""></i>
        </button>
        <div id=""AvailableActionsMenu"" class=""dropdown-menu text-center"" aria-labelledby=""AvailableActionsMenu""></div>
    </section>
</div>
<!--TOPBAR-->
<div id=""CycleBrief"" class=""TopBar0 pl-4 pr-4""></div>
<!--CONTENT AFTER TOP BAR-->
<div class=""ContentAfterTopBar mb-4"">
    <label class=""p-2"">Latest Transactions</label>
    <div class="" card card-body p-md-4 mb-3"" id=""transactionsList"">
        <table id=""dtBasicExample"" class=""table table-responsive-sm"" cellspacing=""0"" width=""100%"">
            <thead class=""d-none"">
                <tr>
                    <th class=""th-sm"">
                        Name
                    </th>
                    <th class=""th-sm"">
                  ");
            WriteLiteral(@"      Position
                    </th>
                    <th class=""th-sm"">
                        Office
                    </th>
                    <th class=""th-sm"">
                        Age
                    </th>
                </tr>
            </thead>
            <tbody id=""transaction_cycles""></tbody>
        </table>
    </div>
</div>

<!-- Modal -->
<div id='DetialModal' class=""modal fade"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""p-n m-n pull-left"">Transaction Detials</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">

                <div id='DetialContainer'>

                </div");
            WriteLiteral(@">
            </div>
        </div>
    </div>
</div>

<style>
    .table tbody tr td {
        vertical-align: middle;
    }
</style>
<script>
    var CycleId = 0;
    var CurrentDate = moment().format('YYYY-MM-DD HH:m:s');

    // ====================== JQUERY ==========================//
    $(document).ready(function () {

        $('.dataTables_length').addClass('bs-select');
        $(""select"").removeClass(""custom-select"");
        $("".SideNav a:nth(0)"").addClass(""activated"");
        $("".SideNav i:nth(0)"").css(""color"", ""white"");
        CycleId = geturl_cycleId();
        GetCycleDetails(CycleId);
        
        GetCycleBrief(CycleId);

    });

    // ====================== 1- GET CYCLE DETAILS FUNCTION ==========================//

     function GetCycleBrief(CycleId) {
        var cycleId = CycleId;
        console.log(cycleId);
        //var currLocation = await getCurrentLocation();
        //var userlat = currLocation.latitude;
        //var userlng = currLoc");
            WriteLiteral(@"ation.longitude;
        //var CycleId = location.search.substring(1).split('=')[1];
        //const APIurl = BaseAPIurl + userlat + ""/"" + userlng + ""/"" + DeviceId + ""/"" + userID + ""/cycles"" + ""/"" + CycleId;

        var divBriefBar = $(""#CycleBrief"");

         divBriefBar.empty();
         var Available_transactions_menu = $(""#AvailableActionsMenu"");
         Available_transactions_menu.empty();



        $.ajax({
            url: '");
            EndContext();
            BeginContext(3724, 26, false);
#line 111 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\CycleActions\CycleTranaction.cshtml"
             Write(Url.Action("GetCycleById"));

#line default
#line hidden
            EndContext();
            BeginContext(3750, 2931, true);
            WriteLiteral(@"',
            method: 'Get',
            data: { cycleId},
            success: (res) => {
                console.log(res);
                if (res.data) { 
                        var transactionTypeList;
                        var transList;
                        if (res.data.userTitle == 'BBX') { 
                            transactionTypeList = `<a class=""dropdown-item"" href=""NewDelivery?cycleId=${res.data.cycleId}&ActionId=1""> Delivery</a>`

                        } else {
                            if (res.data.reconciliationDate > CurrentDate) {
                                transactionTypeList = `<a class=""dropdown-item"" href=""NewDelivery?cycleId=${res.data.cycleId}&ActionId=2""> Return</a>`
                                       }
                            transList = `<a class=""dropdown-item"" href=""NewDelivery?cycleId=${res.data.cycleId}&ActionId=3""> Transfer</a>`

                        } 

                        var cycletype = res.data.cycleType == 0 ? ""Nation Wide");
            WriteLiteral(@""" : ""Event"";
                        $('#cycleName').text(res.data.name); 

                    var cycleTypeDiv = `<div class=""row"">
                                                <div class=""col-6 col-lg-8 d-flex justify-content-center flex-column "">
                                                    <h2>${cycletype}</h2>
                                                    <label>${moment(res.data.startDate).format('DD/MM/YYYY')} - ${moment(res.data.endDate).format('DD/MM/YYYY')}</label>
                                                </div>
                                                <div class=""col-6 col-lg-4  text-right"">
                                                    <a href=""AvailableStocks?cycleId=${cycleId}""><span class=""pt-3 pb-3 stock-card d-flex flex-column justify-content-center align-items-center float-right"">
                                                        <h5>Available Stock</h5>
                                                        <span class=""SmallNum""><span ");
            WriteLiteral(@"class=""BigNum"">${res.remaining.totalItems}</span>/${res.remaining.remainingItems}</span>
                                                    </span></a>
                                                 </div>
                                            </div>`;
                   
                    divBriefBar.append(cycleTypeDiv);
                    Available_transactions_menu.append(transactionTypeList);
                    if (transList) {
                        Available_transactions_menu.append(transList);
                    }

                }
                else {
                    divCycleList.empty();
                }
            }

        });
    }



    // ====================== 2- GET TRANSACTIONS DETAILS FUNCTION ==========================//
    function GetCycleDetails(cycleId)
    { 
        $.ajax({
            url: '");
            EndContext();
            BeginContext(6682, 37, false);
#line 167 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\CycleActions\CycleTranaction.cshtml"
             Write(Url.Action("GetTransactionCycleById"));

#line default
#line hidden
            EndContext();
            BeginContext(6719, 3080, true);
            WriteLiteral(@"',
            method: ""Get"",
            data: { cycleId },
            success: (res) => {
                console.log(res);
                if (res) {

                    for (let item of res.data) {
                        var btnViewProducts;


                        btnViewProducts = `<button title=""View transaction products"" class=""btn btn-info px-2"" onClick=""showDetials(${item.transactionId})""> <div><i class = ""fas fa-info"" > </i></div></button>`


                        var transactionsCycles = `<tr class=""text-center"">
                                                <td class=""text-left"">
                                                  <span class=""delivery"">${item.typeName}</span><label> - ${item.statusName}</label><br />
                                                    ${item.type == 1 ?
                                ` <span class=""toCustomer""><i class=""fas fa-arrow-up"" style=""font-size:20px; color:blue""></i> To: ${item.toUserName} </span><label> - ${item.jobTitleId}</l");
            WriteLiteral(@"abel>`
                                : ` <span class=""toCustomer""><i class=""fas fa-arrow-down"" style=""font-size:20px;color:red""></i> From: ${item.fromUserName} </span><label> - ${item.jobTitleId}</label>`}
                                                </td>
                                                <td><h2 class=""itemNum"">${item.totalItem}</h2>
                                                    <label>Items</label></td>
                                                <td><label>${moment(item.date).format('DD/MM/YYYY HH:mm')}</label></td>

                                                <td>  ${btnViewProducts}</td>
                                              </tr>`
                        $(""#transaction_cycles"").append(transactionsCycles);

                    }
                    $('#dtBasicExample').DataTable({
                        ""order"": true
                    });
                }
                else {
                    $(""#transactionsList"").append(`<div class=""a");
            WriteLiteral(@"lert alert-dark text-center"" style=""font-size:25px;"" role=""alert"">
                                       No transactions found !!
                                    </div>`);
                }

                $(""#dtBasicExample_length"").empty();
                // ShowNotification()
            }
            , error: (err) => { /*console.log(err)*/ }


        });



    }

    


    //Get CycleId From Url
    $.urlParam = function (cycleId) {
        var results = new RegExp('[\?&]' + cycleId + '=([^&#]*)').exec(window.location.href);
        if (results == null) {
            return null;
        }
        else {
            return decodeURI(results[1]) || 0;
        }
    }
     function geturl_cycleId() {
        var url = $.urlParam(""cycleId"");

        if (url != null && url != '') {
            return url;

        }
    }


</script>
<script>
        //show tranaction details in transaction
    function showDetials(Tid) {

        $.ajax({

          ");
            WriteLiteral("  url: \'");
            EndContext();
            BeginContext(9800, 47, false);
#line 249 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\CycleActions\CycleTranaction.cshtml"
             Write(Url.Action("_TransactionDetails","Transaction"));

#line default
#line hidden
            EndContext();
            BeginContext(9847, 260, true);
            WriteLiteral(@"',
            method: 'Get',
            data: { Tid },
            success: function (data, jqXHR) {
                $('#DetialContainer').html(data);
                $('#DetialModal').modal('show');


            }
        });
    }

</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
