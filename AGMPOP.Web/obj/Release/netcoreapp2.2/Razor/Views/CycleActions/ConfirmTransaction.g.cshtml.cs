#pragma checksum "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\CycleActions\ConfirmTransaction.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "354a79ed2751da9b7f700d5c18f70e395230328d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CycleActions_ConfirmTransaction), @"mvc.1.0.view", @"/Views/CycleActions/ConfirmTransaction.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/CycleActions/ConfirmTransaction.cshtml", typeof(AspNetCore.Views_CycleActions_ConfirmTransaction))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\_ViewImports.cshtml"
using AGMPOP.Web;

#line default
#line hidden
#line 2 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\_ViewImports.cshtml"
using AGMPOP.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"354a79ed2751da9b7f700d5c18f70e395230328d", @"/Views/CycleActions/ConfirmTransaction.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c3344144602cec692e91fef16bcf12fc0a4de791", @"/Views/_ViewImports.cshtml")]
    public class Views_CycleActions_ConfirmTransaction : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/mobile/assets/css/site.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\CycleActions\ConfirmTransaction.cshtml"
  
    ViewData["Title"] = "New Delivery Confirmation";

#line default
#line hidden
            BeginContext(63, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(65, 61, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "354a79ed2751da9b7f700d5c18f70e395230328d4286", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(126, 6525, true);
            WriteLiteral(@"
<!--TOP BAR-->
<div class=""TopBar0 pl-4"" style=""padding:10px;"">
    <div class=""row"">
        <div class=""col-8 col-lg-9 d-flex flex-column justify-items-center align-self-center cycleDetails"">
            <div class=""pb-2""><h2 class=""d-inline"">Cycle Name</h2> <h5 class=""d-inline"">(hello)</h5></div>
            <label> &nbsp;  </label>
            <label> &nbsp;</label>
        </div>
        <div class=""col-4 col-lg-3 text-right align-self-center"">
            <!-- Horizontal Steppers -->
            <div class=""row"">
                <div class=""col-md-12"">
 
                </div>
            </div>
        </div>
    </div>
</div>

<!--CONTENT AFTER TOP BAR-->
<div class=""ContentAfterTopBar"">
    <h6 class=""text-center"">Please review the data below</h6>
    <label class=""p-2"">Added BBOâ€™s & Products</label>
    <div class="" card card-body mb-4  pl-md-5 pr-md-5""id=""trans_actions_container"">

    </div>
    <input type=""button"" value=""Next"" id=""btnNextid"" onclick=""Nextbtn()""/>
   ");
            WriteLiteral(@" <div class="" card card-body mb-4  pl-md-5 pr-md-5 NewDeliveryConfirmationBBX"" style=""display:none"">

    </div>
    <div class=""viewAll text-right mt-3 mb-3"">
    </div>
</div>
<!-- MODAL -->
<div class=""modal fade"" id=""exampleModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content mt-3 p-3"">
            <div class=""modal-body text-center"">
                <h3 class=""text-center""></h3>
                <button type=""button"" class=""m-1 px-3 btn btn-success"" data-dismiss=""modal"">Close</button>
            </div>
        </div>
    </div>
</div>


<style>
    .table tbody tr td {
        vertical-align: middle;
    }
</style>

<script>

    function GetTransactions() {

        var cycleid = CycleID;
        var ValArray = [], y;
        $.ajax({
            url: ""/CycleActions/GetTransactions"",
            type: ""Get"",
            data: { cycleid },
            s");
            WriteLiteral(@"uccess: response => {
               // console.log(response);

                var res;
                res = response.data;
                if (res) {
                    for (let transaction of res) {

                        var trans_action = ` <div class=""row"">
                                            <div class=""col-2 m-auto"">
                                                <img src=""${transaction.productImg}"" style=""border-radius:50%"" width=""80"" height=""80"">
                                            </div>
                                            <div class=""col-3 m-auto"">
                                                <h4>${transaction.productName}</h4>
                                            </div>
                                            <div class=""col-3 m-auto"">
                                                <h4>${transaction.code}</h4>
                                            </div>
                                            <div class=""col-2 m-auto"">
    ");
            WriteLiteral(@"                                            <h4>${transaction.typeName}</h4>
                                            </div>
                                            <div class=""col-2 text-md-right m-auto"">
                                                <input class=""ProductCount"" id=${transaction.productId} type=""number"" data-trans=${transaction.quantity} data-product=${transaction.productId} name=""value"" maxlength=""4"" size=""1"" style=""height:40px; width:70px; text-align:center; font-size:18px; border-radius:5px;"" onkeyup=""checkValues(event)"" min=0 value=""0""> <h4 class=""d-inline"">
                                                 
                                            </div>
                                        </div><hr />`
                        $(""#trans_actions_container"").append(trans_action);
                        y = `${transaction.quantity}`
                        ValArray.push(y);
                    }

                }

                else {
                    $(");
            WriteLiteral(@"""#Transactions"").append(`<div class=""alert alert-dark text-center"" style=""font-size:25px;"" role=""alert"">No Actions Available !!</div>`);
                }
                $('#dtBasicExample').DataTable();
                $("".loader"").fadeOut();

            },
        });

    }



    // ================== CONFIRM WITH VALIDATION FUNCTIONS ================== //

    function GetUserInputProductNum() {
        var ProductUserInputArray = [];

        for (let item of $("".ProductCount"")) {

            var Product = $(item);
            var obj = {
                ""productId"": Product.data('product'),
                ""count"": Product.val()
            };
            if (obj.count > 0) {
                ProductUserInputArray.push(obj)
            }
        }
         return ProductUserInputArray;
    }

    function Nextbtn() {
        $("".NewDeliveryConfirmationBBX"").css(""display"", ""block"");
        $(""#trans_actions_container"").css(""display"", ""none"")
        $(""#btnNextid"").c");
            WriteLiteral(@"ss(""display"", ""none"")
         getFormData();
        GetCycleDetails();
    }

    function getFormData() {

        var obj = {
            ""cycle_id"": CycleID,
            ""TransactionId"": TransID,
            ""NotificationId"": NotificationID,
            ""transaction_items"": GetUserInputProductNum(),
        };
       // var data = JSON.stringify(obj);
     //   console.log(data);
        return obj;
    }

 

 
    // ================== JQUERY ================== //
    $(document).ready(function () {
        $('.dataTables_length').addClass('bs-select');
        $(""select"").removeClass(""custom-select"");
        $(""#AvailableActions"").hide();
        $(""#hello1"").text(""New Delivery Confirmation"");
        $("".cycleDetails"").empty();
        GetCycleName();
        GetTransactions();

    });

</script>

<script>
    // ================== GLOBAL VARIABLES ================== //
    var x = Object.fromEntries(new URLSearchParams(location.search));
    var CycleID = x.Cyc");
            WriteLiteral(@"leId;
    var TransID = x.TransactionId;
    var NotificationID = x.NotificationId;
    
    // ================== GET NEW ITEMS TO RECIVE AND CONFIRM FUNCTION ================== //

    function DeliveryConfirm() {
        var cycleId = CycleID;
        var TransID = x.TransactionId;
        var NotificationID = x.NotificationID;

        $.ajax({
            url: '");
            EndContext();
            BeginContext(6652, 45, false);
#line 187 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\CycleActions\ConfirmTransaction.cshtml"
             Write(Url.Action("GetTransactions", "CycleActions"));

#line default
#line hidden
            EndContext();
            BeginContext(6697, 2011, true);
            WriteLiteral(@"',
            type: ""Get"",
            data: { cycleId, TransID },
            success: response => {
                var res = response.data;

               // console.log(response);
                if (res) {
                    for (i = 0; i < res.length; i++) {
                        var addDelivery = ` <div class=""row"">
                <div class=""col-2 m-auto"">
                    <img src=""${res[i].productImg}"" style=""border-radius:50%"" width=""80"" height=""80"">
                </div>
                <div class=""col-3 m-auto"">
                    <h4>${res[i].productName}</h4>
                </div>
                <div class=""col-3 m-auto"">
                    <h4>#${res[i].code}</h4>
                </div>
                <div class=""col-2 m-auto"">

                     <h4>${res[i].typeName}</h4>

                 </div>
                <div class=""col-2 text-center text-md-right m-auto"">
                    <span class=""d-inline ProductsNum"">${res[i].quantity}</span>
    ");
            WriteLiteral(@"            </div>
            </div><hr /> `
                        $("".NewDeliveryConfirmationBBX"").append(addDelivery);
                    }
               
                    var ConfirmBtn =`<button onclick=""ConfirmBtn()"">Confirm</button>`
                    $("".viewAll"").append(ConfirmBtn);
                }
                //else {
                //    $(""#Requests"").append(`<div class=""alert alert-dark text-center"" style=""font-size:25px;"" role=""alert"">  No Requests found !! </div>`);
                //    var ConfirmBtn = ` <a href=""#""><button>Confirm</button></a>`
                //    $("".viewAll"").append(ConfirmBtn);
                //}
            },
            //ShowNotification()


        })

    }

 
    // ================== GET CURRENT CYCLE NAME ================== //
        function GetCycleName() {
            var cycleId = CycleID;
            var NotificationID = x.NotificationID;

        $.ajax({
            url: '");
            EndContext();
            BeginContext(8709, 42, false);
#line 241 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\CycleActions\ConfirmTransaction.cshtml"
             Write(Url.Action("GetCycleName", "CycleActions"));

#line default
#line hidden
            EndContext();
            BeginContext(8751, 1119, true);
            WriteLiteral(@"',
            type: ""Get"",
            data: { cycleId },
            success: response => {
              //  console.log(response);
                var res = response;
                if (res) {
                    var cycletype = res.cycleType == 1 ? ""NationWide"" : ""Event"";
                    var Name = `<h2 style=""display:contents"">${res.name}</h2><label style=""display:contents; font-size : 16px"" > - ${cycletype}</label>
                    <label class=""mt-2"">${moment(res.startDate).format('DD/MM/YYYY')} - ${moment(res.endDate).format('DD/MM/YYYY')}</label>`
                    $("".cycleDetails"").append(Name);
                }
                else {
                    $("".cycleDetails"").append(""ERROR"");
                }
               // GetCycleDetails();
            },

        });

    }
 
    // ====================== Get current cycle details ==========================//

    function GetCycleDetails() {
        var cycleId = CycleID;
        var TransID = x.Transactio");
            WriteLiteral("nId;\r\n        var NotificationID = x.NotificationID;\r\n\r\n\r\n         $.ajax({\r\n            url: \'");
            EndContext();
            BeginContext(9871, 45, false);
#line 272 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\CycleActions\ConfirmTransaction.cshtml"
             Write(Url.Action("GetCycleDetalis", "CycleActions"));

#line default
#line hidden
            EndContext();
            BeginContext(9916, 1405, true);
            WriteLiteral(@"',
            type: ""Get"",
             data: { cycleId, TransID},
            success: response => {
             //   console.log(response);
                 var res;
                    res = response;
                    if (res) {
                        //append total items
                        var AvailableItems = `${res.allItems}`
                        $("".BigNum"").append(AvailableItems);
                        //append cycle name & date
                        var CycleDetails = ` <label>
                           ${res.user_id == userID ? `<label><b>to : </b> ${res.toUserName}</label>` : `<label><b>from: </b> ${res.fromUserName}</label>`}`
                         $("".cycleDetails"").append(CycleDetails);
                    }
                    else {
                        $("".cycleDetails"").append(""ERROR"");
                    }

                DeliveryConfirm();
            },

        });

    }

 

    // ================== NOTIFICATION DETAILES =========");
            WriteLiteral(@"========= //

    // ================== CONFIRM FUNCTION ================== //

    function ConfirmBtn() {
        //var cycleid = CycleID;
        //var transid = TransID;
        //var notificationid = NotificationID;

        var obj = getFormData();
        var finalObj = {clearnceData: obj }
        console.log(finalObj);
 
        $.ajax({
            url: '");
            EndContext();
            BeginContext(11322, 48, false);
#line 315 "E:\TFS\POPAGM\AGMPOP_Core\AGMPOP.Web\Views\CycleActions\ConfirmTransaction.cshtml"
             Write(Url.Action("UpdateNotification", "CycleActions"));

#line default
#line hidden
            EndContext();
            BeginContext(11370, 2375, true);
            WriteLiteral(@"',
            type: ""POST"",
            data: finalObj,
            success: response => {

                var res;
                if (response.success) {
                    res = response;
                    if (res.message != null) {
                        $(""#exampleModal"").empty();
                        var modal = `<div class=""modal-dialog"" role=""document"">
                        <div class=""modal-content mt-3 p-3"">
                            <div class=""modal-body text-center"">
                                <h3 class=""text-center""></h3>
                                <a class=""m-1 px-3 btn btn-success"" href=""/CycleActions/CycleTranaction?cycleId=${CycleID}"">Close</a>
                            </div>
                        </div>
                    </div> `
                        $(""#exampleModal"").append(modal);
                        $("".loader"").fadeOut();
                        $("".modal-body h3"").text(""Confirmed"").addClass(""success"")
                        $");
            WriteLiteral(@"(""#exampleModal"").modal(""show"");
                    } else {
                        $("".loader"").fadeOut();
                        $("".modal-body"").text(""Failed"").addClass(""danger"")
                        $(""#exampleModal"").modal(""show"");

                    }
                }
            },


        });
    }
 
    async function ShowNotification() {
        var currLocation = await getCurrentLocation();
        var userlat = currLocation.latitude;
        var userlng = currLocation.longitude;
        const APIurl = BaseAPIurl + userlat + ""/"" + userlng + ""/"" + DeviceId + ""/users/"" + userID + ""/notification/"" + NotificationID;

        let apiResponse = await fetch(proxyurl + APIurl, {
            method: 'POST',
            headers: {
                'Authorization': 'Bearer ' + AccessToken,
                //'Accept': 'application/json',
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*',
            },
            body: ");
            WriteLiteral(@"JSON
        });

        var res;
        if (apiResponse.ok) {

            res = await apiResponse.json();
            if (res[""data""] != null) {
                console.log(res[""data""])
            } else {
                console.log(""false"")
            }
        } $("".loader"").fadeOut();
    }
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
