@model AGMPOP.Web.Models.ProductVM
@{
    Layout = "_PartialLayout";
}


@*form*@
<form id="formEditProduct" autocomplete="off" asp-action="Edit" asp-controller="Product">
    <div class="modal-body">
        <div class="row">
            <div class="col-12 ">
                <input asp-for="ProductId" hidden class="form-control" />

                <label class=" control-label">
                    Item Name
                </label>
                <div class="form-group">
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
            </div>



            <div class="col-12 ">
                <div class="form-group">
                    <label class=" control-label">
                        Code
                    </label>
                    <div class="form-group">
                        <input asp-for="Code"   class="form-control" />
                        <span asp-validation-for="Code" class="text-danger"></span>
                    </div>
                    @*@Html.TextBoxFor(model => model.Code, new { @class = "form-control", required = "true", autocomplete = "off" })
                        <span>@Html.ValidationMessageFor(d => d.Code)</span>*@
                </div>

            </div>

            <div class="col-12">
                <label class="control-label">
                    Inventory Quantity
                </label>

                <input asp-for="InventoryQnty" name="InventoryQnty" min="0" readonly class="form-control" />
                <span asp-validation-for="InventoryQnty" class="text-danger"></span>
            </div>

            <style>
                .select-wrapper input.select-dropdown {
                    padding: 0px !important;
                }
            </style>

            <div id="department-container" class="col-12 mt-2">
                <label class="control-label">
                    Department
                </label>
                <select id="DepartmentId" class="md-form mdb-select mt-0" name="DepartmentID" asp-for="DepartmentID" Searchable="Search here...">
                    <option value="" disabled>Select Department</option>
                </select>
            </div>


            @*<div class="col-12 mt-2">
                <label class="control-label">
                    Type
                </label>
                <select class="md-form mdb-select mt-0" name="TypeId" asp-for="TypeId" Searchable="Search here...">
                    <option value="" disabled>Select Type</option>
                </select>
            </div>*@

            <div class="col-12 ">
                <label class="pt-n mt-n">Product Photo</label>

                <input type="file" asp-for="Image" accept="image/png, image/jpeg" name="file" onchange="readfile(this);" id="CreateFileUploader">
             </div>
            <div class="col-12  ">
                <img id="image_preview" class="" src="" alt="" style="max-height:50px;min-width:50px; width:50px;" />
            </div>
        </div>
    </div>
    <div class="modal-footer  pb-0">
        @*    <button class="btn btn-primary" type="submit" id="savedbtn">Save</button>*@ 
        <button type="button" class="btn btn-grey px-3" data-dismiss="modal">Close</button> 
        <button type="submit" class="btn btn-primary px-3 mr-0 ">Save</button>
    </div>


</form>


<script>
    // Material Select Initialization
    $(document).ready(function () {
        getAllDept();
    //    getAllType();
        $('#DepartmentId').materialSelect();
        $('#TypeId').materialSelect();

        var departmentReadOnly = @Html.Raw(Json.Serialize(ViewBag.DepartmentReadOnly));
        if (departmentReadOnly) {
            $('#department-container').css('pointer-events', 'none');
        }
    });
</script>
<!--preview pic-->
<script>

    function readfile(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#image_preview').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

</script>



<script>
    $('#formEditProduct').ajaxForm(response => {
        if (response) {
            if (response.success) {
                $('#editProductModal').modal('hide');
                Swal.fire({
                    icon: 'success',
                    text: response.message,
                }).then(_ => {
                    loadProduct();
 


                });
            }
            else {
                Swal.fire({
                    icon: 'error',
                    text: response.message,
                });
            }
        }
    });


    @*function getAllType() {
         $('#TypeId').empty();
         $('#TypeId').append('<option  disabled>Select Type</option>');

        $.ajax({
            url: '@Url.Action("GetAllProductTypes","common")',
            method: 'GET',

            success: response => {
                console.log(response);

                if (response && response.length) {
                    response.forEach(r => {
                        $('#TypeId').append(`<option value="${r.id}">${r.name}</option>`);
                    });
                }
            }
        });
    }*@

    function getAllDept() {
        return new Promise((resolve, reject) => {

            $('#DepartmentId').empty();
            $('#DepartmentId').append('<option value="" disabled>Select Department</option>');

            $.ajax({
                url: '@Url.Action("GetAllDepartments", "common")',
                method: 'GET',
                async: false,

                success: response => {
                    console.log(response);
                    if (response) {
                        response.forEach(d => {
                            $('#DepartmentId').append(`<option value="${d.id}">${d.name}</option>`);
                        });
                    }
                    resolve();
                }
            });
        });
    }

</script>
