@model AGMPOP.BL.Models.ViewModels.ProductDTO

@{
    ViewData["Title"] = "BBOs & Products";
}


<div class="text-right mt-1">
    <button type="button" class="material-tooltip-main px-3 btn btn-blue-grey  mr-0 mt-0" style="height:37px;" onclick="location.href='@Url.Action("index","inventory")'">
        Inveintory &nbsp; <i class="fa fa-align-center" style="vertical-align: middle !important; font-size:20px;"> </i>
    </button>
    <button type="button" class="material-tooltip-main  btn btn-primary  text-center mr-0 mt-0 px-3 waves-effect waves-light " style="height:37px;" onclick="Create()">
        Add Product &nbsp; <i class="fal  fa-plus fa-align-center" style="vertical-align: middle !important; font-size:20px;"> </i>
    </button>

</div>


<!--Search bar -->
<div class=" card px-3 py-1 m-0   accordion">

    <div class="" style="overflow: visible">
        <div class="d-flex justify-content-between  "
             data-toggle="collapse"
             href="#divCollapseSearch"
             role="button"
             aria-expanded="false"
             aria-controls="divCollapseSearch"
             style="cursor: pointer">
            <h5 class="mt-2 font-weight-bold"><i class="far fa-search " style="font-size: 20px;"></i>  Search</h5>
            <span><i class="fa fa-angle-double-down " style="margin-top:10px"></i></span>

        </div>

        <div id="divCollapseSearch" class="collapse mb-2 ">
            <hr /><br />
            <form id="productform">
                <div class="row">
                    <div class="form-group col-sm-6 col-md-4">
                        <label>Product Name</label>
                        <input asp-for="ProductName" class="form-control" />
                    </div>


                    <div class="form-group col-sm-6 col-md-4">
                        <label asp-for="Department"></label>
                        <select id="DepartmentIds" name="DepartmentIds" class="mdb-select" multiple Searchable="Search here...">
                            <option value="" selected disabled>Select Department</option>
                        </select>
                    </div>
                    @*<div class="form-group col-sm-6 col-md-4">
                            <label asp-for="Types"></label>
                            <select asp-for="Types" class="mdb-select" multiple Searchable="Search here...">
                                <option value="" selected disabled>Select Type</option>
                            </select>
                        </div>*@

                    <div class="col-12 text-right">
                        <button type="button" class="btn btn-secondary px-4 m-0" onclick="clearBTN()">
                            Clear &nbsp; <i class="fa fa-trash"></i>
                        </button>
                        <button id="btnsearch" type="button" class="btn btn-primary">
                            Search&nbsp; <i class="fa fa-search"></i>
                        </button>

                    </div>
                </div>
            </form>

        </div>
    </div>
</div>







<!--PartialIndex Modal -->
<div id="PartialIndex" class="mt-2">


</div>

<!--ShowProductDetails Modal -->
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <img id="ProductImg" />

                <p id="code"></p>
                <p id="Name"></p>
                @*<p id="Type"></p>*@
                <p id="Department"></p>
                <p id="InventoryQnty"></p>
                <p id="CreatedBy"></p>
                <p id="CreatedDate"></p>
                <p id="created"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-grey" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!--Edit Modal -->
<div class="modal fade" id="editProductModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProductModalTitle"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div id="result">

            </div>

        </div>
    </div>
</div>


<!--Create Modal -->
<div class="modal fade" id="CreateProductModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="CreateProductModalTitle"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div id="resultCreate">

            </div>

        </div>
    </div>
</div>



@*ShowProductDetails*@
<script>

    function ShowProductDetails(ProductId) {
        var id = ProductId;
        $.ajax({
            url: '@Url.Action("Details", "Product")',
            data: { id },
            type: "Get",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                debugger;
                console.log(data);
                 if (data != null) {
                    $('#exampleModalLongTitle').text("Product Detalis");
                    $('#exampleModalLongTitle').css("text-align", "center")

                     $('#Name').text("Name: " + data.data.name);
                     $('#code').text("Code: " + data.data.code);
                    // type
                    //if (data.data.type==1) {
                    //    $('#Type').text("Type: BBO");
                    //}
                    //if (data.data.type==2) {
                    //    $('#Type').text("Type: Product");
                    // }
                     $('#Department').text("Department: " + data.data.department);
                     $('#InventoryQnty').text("Inventory quantity : " + data.data.qunt);
                     $('#CreatedDate').text("Created Date: " +data.data.createdDate);
                     //img style
                    $('#ProductImg').attr("src", data.data.image);
                    $('#ProductImg').css("float", "right");
                    $('#ProductImg').css("width", "120px");
                    $('#ProductImg').css("height", "120px");
                    $('#exampleModalCenter').modal('show');
                }

            },
            error: function (x) {
                console.log(x);
            },
        });
    }

</script>


@*loadPatialData*@
<script>
    @*function loadPatialData() {
         $.ajax({
            url: '@Url.Action("PartialIndex", "Product")',
            type: "Get",
            contentType: "application/json; charset=utf-8",
             success: function (data) {

                $('#PartialIndex').html(data);
            },
            error: function (x) {
                alert("error" + x);
            },
        });
    }*@

</script>


@*edit*@
<script>

    function Edit(ProductId) {
        var id = ProductId;
        $.ajax({
            url: '@Url.Action("EditProduct", "Product")',
            data: { id },
            type: "Get",
            contentType: "application/json; charset=utf-8",
             success: function (data) {
                 $('#result').html(data);
                 $('#editProductModalTitle').text("Edit Product");
                  $('#editProductModal').modal('show');

            },
            error: function (x) {
                alert("error" + x);
            },
        });
    }

</script>



@* create*@
<script>

    function Create() {

        $.ajax({
            url: '@Url.Action("Create", "Product")',
            type: "Get",
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                $('#resultCreate').html(data);


                $('#CreateProductModalTitle').text("Create Product");
                $('#CreateProductModalTitle').css("text-align", "center")

                $('#CreateProductModal').modal('show');

                // Remove validation.
                $("formId").removeData("validator").removeData("unobtrusiveValidation");

                // Add validation again.


            },
            complete: function  () {

                var form = $("#resultCreate").closest("form");
                form.removeData('validator');
                form.removeData('unobtrusiveValidation');
                $.validator.unobtrusive.parse(form);

            }  ,
            error: function (x) {
                alert("error" + x);
            },
        });

    }

</script>
@*create submit*@
<script>

    function saveNewProduct() {

        var formData = new FormData($('#formCreateProduct')[0]);
        formData.append('file', $('#CreateFileUploader')[0].files[0]);
        $.ajax({
            url: '@Url.Action("Create", "Product")',
            method: 'POST',
            enctype: "multipart/form-data",
            processData: false,
            contentType: false,
            data: formData,
            success: function (data) {
                if (data != null) {
                    if (data.success) {
                        $('#CreateProductModal').modal('hide');

                        Swal.fire({
                            text: data.message,
                            icon:"success",

                        }

                        ).then(function () {
                            loadProduct();

                        })
                     }
                }
            },
            error: function (x) {
                alert("error" + x);
            },
        });
    }
</script>

<script>
    function getAllTypes() {
        $('#Types').empty();
        $('#Types').append('<option class="default" value="" selected disabled>Select Type</option>');

        $.ajax({
            url: '@Url.Action("GetAllProductTypes","common")',
            method: 'GET',
            async: false,
            success: response => {
                console.log(response);

                if (response && response.length) {
                    response.forEach(r => {
                        $('#Types').append(`<option value="${r.id}">${r.name}</option>`);
                    });
                }
            }
        });
    }

     function getAllDepts() {
        $('#DepartmentIds').empty();
         $('#DepartmentIds').append('<option class="default" value="" selected disabled>Select Department</option>');

        $.ajax({
            url: '@Url.Action("GetAllDepartments", "common")',
            method: 'GET',
            async: false,

            success: response => {
                console.log(response);
                if (response ) {
                    response.forEach(d => {
                        $('#DepartmentIds').append(`<option value="${d.id}">${d.name}</option>`);
                    });
                }
            }
        });
    }




  @* search submit *@
    function loadProduct(e) {
        //if (e) {
        //    e.preventDefault();
        //    e.returnValue = false;
        //}
         var form = $('#productform').serialize();
        $.ajax({
            url: '@Url.Action("Search")?' + form,
            method: 'GET',
            success: response => {
                if (response) {
                    $('#PartialIndex').html(response);
                }
                else {
                    Swal.fire({
                        icon: 'error',
                        text: 'Failed to load  ',
                    });
                }
            }
        });


    }

</script>
<script>
    $(() => {
        getAllDepts();
        getAllTypes();
        loadProduct();
        $('#btnsearch').on('click', loadProduct);
    })
</script>

<script>


    async function ExportProdcut() {

        var now = moment().format();
        var form = $('#productform').serialize();
 
         fetch('@Url.Action("ExportProduct")?' + form, {
             method: 'get',
 
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        }).then(response => {
            return response.blob();
        }).then(blob => {
            if (!blob) {
                swal.fire({
                    icon: 'error',
                    text: 'No file to download',
                });
                return;
            } else if (!blob.size){
                swal.fire({
                    icon: 'error',
                    text: 'You don\'t have permission',
                });
                return;
            }
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.style.display = 'none';
            a.href = url;
            a.download = `Product_${now}.xlsx`;
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
            }).catch(err => {
                swal.fire({
                icon: 'error',
                text: 'An error occured',
            });
        });
    }
</script>

<script>

    function clearBTN() {
        console.log("reset");
        $("#productform").resetForm();
        $(".default").attr('selected', true);
        loadProduct();
    }
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}