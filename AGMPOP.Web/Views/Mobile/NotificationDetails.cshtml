
@{
    ViewData["Title"] = "Transfer Details";
}

<link href="~/mobile/assets/css/site.css" rel="stylesheet" />
<div class="TopBar0 pl-4">

    <div class="row ">
        <div class="col-6 col-lg-8 d-flex justify-content-center flex-column  cycleDetails">
        </div>


        <div class="col-6 col-lg-4  text-right ">
            <span class="pt-3 pb-3 stock-card d-flex flex-column justify-content-center align-items-center float-right">
                <h5>Total Items</h5>
                <span class="BigNum"></span>
            </span>
        </div>
    </div>


</div>

<div class="ContentAfterTopBar">
    <label class="p-2">Transactions Details</label>


    <div class=" card card-body mb-4  pl-md-5 pr-md-5 TransferDetails">

    </div>

</div>


<style>
    .table tbody tr td {
        vertical-align: middle;
    }
</style>

<script>
    // ================== JQUERY ================== //
    $(document).ready(function () {
        $('.dataTables_length').addClass('bs-select');
        $("select").removeClass("custom-select");
        $("#AvailableActions").hide();
        GetCycleName();
    });

    // ================== GLOBAL VARIABLES ================== //
    var x = Object.fromEntries(new URLSearchParams(location.search));
    var CycleID = x.CycleId;
    var NotificationID = x.NotificationId;
    var TransID = x.TransactionId;
    // ================== GET TRANSACTION DETAILS ================== //
 

        function GetCycleName() {
        var cycleId = CycleID;
        $.ajax({
            url: '@Url.Action("GetCycleName", "Notification")',
            type: "Get",
            data: { cycleId },
            success: response => {
              //  console.log(response);
                var res = response;
                if (res) {
                    var cycletype = res.cycleType == 1 ? "NationWide" : "Event";
                    var Name = `<h2 style="display:contents">${res.name}</h2><label style="display:contents; font-size : 16px" > - ${cycletype}</label>
                    <label class="mt-2">${moment(res.startDate).format('DD/MM/YYYY')} - ${moment(res.endDate).format('DD/MM/YYYY')}</label>`
                    $(".cycleDetails").append(Name);
                }
                else {
                    $(".cycleDetails").append("ERROR");
                }
                DeliveryConfirm();
                GetCycleDetails();
            },

        });

    }

    //async function GetTransactionDetails() {
    //    var currLocation = await getCurrentLocation();
    //    var userlat = currLocation.latitude;
    //    var userlng = currLocation.longitude;
    //    const APIurl = BaseAPIurl + userlat + "/" + userlng + "/" + DeviceId + "/" + userID + "/cycles/" + CycleID;
    //    let apiResponse = await fetch(proxyurl + APIurl, {
    //        method: 'GET',
    //        headers: {
    //            'Authorization': 'Bearer ' + AccessToken,
    //            'Accept': 'application/json',
    //            'Content-Type': 'application/json',
    //            'Access-Control-Allow-Origin': '*',
    //        },
    //    });
    //    var res;
    //    if (apiResponse.ok) {
    //        res = await apiResponse.json();
    //        if (res.data) {
    //            var cycletype = res.data.type.id == 0 ? "NW" : "Ev";
    //            var CycleName = `<h2 style="display:contents">${res.data.name}</h2><label style="display:contents; font-size : 16px" > - ${cycletype}</label>
    //                <label class="mt-2">${moment(res.data.start_date).format('DD/MM/YYYY')} - ${moment(res.data.end_date).format('DD/MM/YYYY')}</label> `
    //            $(".cycleDetails").append(CycleName);
    //        }
    //        else {
    //            $(".cycleDetails").empty();
    //        }
    //    } GetProductsDetails();
    //    ShowNotification()
    //}

    // ================== GET PRODUCTS DETAILS ================== //


      function DeliveryConfirm() {
        var cycleId = CycleID;
        var TransID = x.TransactionId;

        $.ajax({
            url: '@Url.Action("GetTransactions", "Notification")',
            type: "Get",
            data: { cycleId, TransID },
            success: response => {
                var res = response;

                 if (res) {
                    // ======== append cycle date =======
                    for (i = 0; i < res.length; i++) {
                        var Products_List = ` <div class="row">
                            <div class="col-2 m-auto">
                                <img src="${res[i].productImg}" style="border-radius:50%" width="80" height="80">
                            </div>
                            <div class="col-3 m-auto">
                                <h4>${res[i].productName}</h4>
                            </div>
                            <div class="col-3 m-auto">
                                <h4>${res[i].code}</h4>
                            </div>
                            <div class="col-2 m-auto">
                                <h4>${res[i].typeName}</h4>
                            </div>
                            <div class="col-2 text-center text-md-right m-auto">
                                <span class="ProductsNum">${res[i].quantity}</span>
                            </div>
                        </div><hr /> `
                        $(".TransferDetails").append(Products_List);
                    }
                }
 
            },
            //ShowNotification()


        })

    }

    function GetCycleDetails() {
        var cycleId = CycleID;
        var TransID = x.TransactionId;

         $.ajax({
            url: '@Url.Action("GetCycleDetalis", "Notification")',
            type: "Get",
             data: { cycleId, TransID},
            success: response => {
                  var res;
                    res = response;
                    if (res) {
                        //append total items
                        var AvailableItems = `${res.allItems}`
                        $(".BigNum").append(AvailableItems);
                        //append cycle name & date
                        var CycleDetails = ` <label>
                           ${res.user_id == userID ? `<label><b>to : </b> ${res.toUserName}</label>` : `<label><b>from: </b> ${res.fromUserName}</label>`}`
                         $(".cycleDetails").append(CycleDetails);
                    }
                    else {
                        $(".cycleDetails").append("ERROR");
                    }

             },

        });

    }


    //async function GetProductsDetails() {
    //    var currLocation = await getCurrentLocation();
    //    var userlat = currLocation.latitude;
    //    var userlng = currLocation.longitude;
    //    var x = Object.fromEntries(new URLSearchParams(location.search));
    //    var CycleID = x.cycleId;
    //    var TransID = x.TransactionId;
    //    const APIurl = BaseAPIurl + userlat + "/" + userlng + "/" + DeviceId + "/" + userID + "/transcations/" + TransID;

    //    let apiResponse = await fetch(proxyurl + APIurl, {
    //        method: 'GET',
    //        headers: {
    //            'Authorization': 'Bearer ' + AccessToken,
    //            'Accept': 'application/json',
    //            'Content-Type': 'application/json',
    //            'Access-Control-Allow-Origin': '*',
    //        },
    //    });

    //    var res;
    //    if (apiResponse.ok) {
    //        res = await apiResponse.json();
    //        if (res.data) {
    //            $('#cycleName').text(res.data.type.name + " Details");
    //            // ======== append total items =======
    //            var AvailableItems = `${res.data.total_items}`
    //            $(".BigNum").append(AvailableItems);
    //            // ======== append cycle name =======
    //            var CycleDetails = `
    //            ${res.data.from.user_id == userID ? `<label ><b>to : </b> ${res.data.to.Full_Name}</label>` : `<label><b>from: </b> ${res.data.from.Full_Name}</label>`}`
    //            $(".cycleDetails").append(CycleDetails);
    //            // ======== append cycle date =======
    //            for (i = 0; i < res.data.items.length; i++) {
    //                var Products_List = ` <div class="row">
    //                        <div class="col-2 m-auto">
    //                            <img src="${res.data.items[i].product.image}" style="border-radius:50%" width="80" height="80">
    //                        </div>
    //                        <div class="col-3 m-auto">
    //                            <h4>${res.data.items[i].product.name}</h4>
    //                        </div>
    //                        <div class="col-3 m-auto">
    //                            <h4>${res.data.items[i].product.code}</h4>
    //                        </div>
    //                        <div class="col-2 m-auto">
    //                            <h4>${res.data.items[i].product.type.name}</h4>
    //                        </div>
    //                        <div class="col-2 text-center text-md-right m-auto">
    //                            <span class="ProductsNum">${res.data.items[i].total_items}</span>
    //                        </div>
    //                    </div><hr /> `
    //                $(".TransferDetails").append(Products_List);
    //            }
    //        }
    //        //$('#dtBasicExample').DataTable();
    //    } $(".loader").fadeOut();
    //}

    // ================== NOTIFICATION FUNCTION ================== //

    async function ShowNotification() {
        var currLocation = await getCurrentLocation();
        var userlat = currLocation.latitude;
        var userlng = currLocation.longitude;
        const APIurl = BaseAPIurl + userlat + "/" + userlng + "/" + DeviceId + "/users/" + userID + "/notification/" + NotificationID;

        let apiResponse = await fetch(proxyurl + APIurl, {
            method: 'POST',
            headers: {
                'Authorization': 'Bearer ' + AccessToken,
                //'Accept': 'application/json',
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*',
            },
            body: JSON
        });

        var res;
        if (apiResponse.ok) {

            res = await apiResponse.json();
            if (res["data"] != null) {
                console.log(res["data"])
            } else {
                console.log("false")
            }
        }
    }
</script>


