@using Microsoft.Extensions.Configuration;
@inject IConfiguration Configuration;

@{
    ViewData["Title"] = "ResetPassword";
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Reset Password</title>
    <style>
        body, html {
            height: 100%;
            width: 100%;
            overflow: hidden;
            background: url('../assets/img/logo/base.png') center center no-repeat;
            background-size: cover;
            color: white;
        }

        .ResetPasswordPage {
            height: 100%;
            width: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }

            .ResetPasswordPage .ResetPasswordForm {
                margin: 50px;
                padding: 50px;
                border: 0.5px solid white inset;
                border-radius: 5px;
                background-color: rgba(255, 255, 255, 0.2);
            }

                .ResetPasswordPage .ResetPasswordForm .span {
                    font-size: 36px;
                    text-align: center;
                }

                .ResetPasswordPage .ResetPasswordForm .UserEmail {
                    margin-top: 30px;
                }

                .ResetPasswordPage .ResetPasswordForm .UserEmail {
                    margin: 20px 0px 30px 0px;
                }

                .ResetPasswordPage .ResetPasswordForm input {
                    outline: none;
                    background-color: rgba(255, 255, 255, 0.3);
                    color: white;
                    border: 0px;
                    border-radius: 5px;
                    height: 60px;
                    width: 320px;
                    padding: 0px 20px;
                    font-size: 22px;
                }

                    .ResetPasswordPage .ResetPasswordForm input::placeholder {
                        color: white;
                        font-size: 22px;
                        font-weight: 100;
                        opacity: 0.7;
                    }

                .ResetPasswordPage .ResetPasswordForm .SignInBtnDiv {
                    text-align: center;
                }

                .ResetPasswordPage .ResetPasswordForm .ResetBtn {
                    outline: none;
                    background: #051937;
                    color: white;
                    font-size: 22px;
                    border: 0px;
                    height: 68px;
                    width: 360px;
                    cursor: pointer;
                    transition: 0.2s all;
                    border-radius: 5px;
                }

                    .ResetPasswordPage .ResetPasswordForm .ResetBtn:hover {
                        background: #000000;
                    }


            .ResetPasswordPage .Forget {
                font-size: 22px;
            }

            .ResetPasswordPage a {
                text-decoration: none;
                color: white;
            }

        .alert-danger {
            text-align: center;
            margin-top: 12px;
            color: white;
            background-color: red;
            border-radius: 5px;
            padding: 10px;
            display: none;
        }
    </style>
    <link href="~/assets/_dev/LoginResponsive.css" rel="stylesheet" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

</head>

<body>
    <div class="ResetPasswordPage">
        <div class="PhilipMorisLogo">
            <img src="~/assets/img/Logo/logo@3x.png" width="211" height="154" />
        </div>
        <div class="ResetPasswordForm">
            <div class="span">Enter Your Mail</div>
            <input class="UserEmail" id="ConfigMail" type="text" placeholder="your Email"><br />
            <button class="ResetBtn" onclick="ResetPassword()">Reset Password</button>
            <div class="alert-danger"></div>
        </div>
    </div>
</body>
</html>

<script>
         const proxyurl = "@Configuration["APIProxyUrl"]";
        const BaseAPIurl = "@Configuration["APIBaseUrl"]";
        const DeviceId = "@Configuration["APIDevice"]";
        const userID = localStorage.getItem('id');
              AccessToken = sessionStorage.getItem('AccessToken');

        // ================== GET LOCATION FUNCTION ================== //
        function getCurrentLocation() {
            return new Promise((resolve, reject) => {
                resolve({ latitude: 30, longitude: 30 });
               
            });
        }
</script>

<script>
        // ================== RESET PASSWORD FUNCTION ================== //

    async function ResetPassword() {
        var currLocation = await getCurrentLocation();
        var userlat = currLocation.latitude;
        var userlng = currLocation.longitude;
        var x = Object.fromEntries(new URLSearchParams(location.search));
        var Email = $('.UserEmail').val();
        const APIurl = BaseAPIurl + userlat + "/" + userlng + "/" + DeviceId + "/users/password/forget?Email=" + Email;

        let apiResponse = await fetch(proxyurl + APIurl, {
            method: 'GET',
            headers: {
                'Authorization': 'Bearer ' + AccessToken,
                'Accept': 'application/json',
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*',
            }
        });

        var res;
        if (apiResponse.ok) {
            res = await apiResponse.json();
            if (res.data) {
                var inavlidMsg = "succeed , Check your Inbox";
                $(".alert-danger").empty().css("display", "block").append(inavlidMsg);
            }
            else {
                var inavlidMsg = "Failed";
                $(".alert-danger").empty().css("display", "block").append(inavlidMsg);
            }
        }
    }
</script>