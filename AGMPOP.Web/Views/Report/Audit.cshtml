@model AGMPOP.BL.Models.ViewModels.AuditSearchVM
@{
    ViewData["Title"] = "Audit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class=" card px-3 py-1 mt-2  mb-2  accordion">
    <div class="" style="overflow: visible">
        <div class="d-flex justify-content-between  collapsed"
             data-toggle="collapse"
             href="#divCollapseSearch"
             role="button"
             aria-expanded="false"
             aria-controls="divCollapseSearch"
             style="cursor: pointer">
            <h5 class="mt-2 font-weight-bold"><i class="far fa-search" style="font-size: 20px;"></i>  Search</h5>
            <span><i class="fa fa-angle-double-down " style="margin-top:10px"></i></span>

        </div>

        <div id="divCollapseSearch" class="collapse show">
            <hr /><br />
            <form id="formSearchCycles" class="pl-3 pr-3">
                <input type="hidden" id="hfTerritories" name="SelectedTerritories" />

                <div class="row">
                    <div class="form-group col-sm-6 col-md-3">
                        <label asp-for="DepartmentIds"></label>
                        <select asp-for="DepartmentIds" class="mdb-select" multiple Searchable="Search here...">
                            <option class="default" value="" selected disabled>Select depatrtment</option>
                        </select>
                    </div>
                    <div class="form-group col-sm-6 col-md-3">
                        <label asp-for="Users"></label>
                        <select asp-for="Users" class="mdb-select" multiple Searchable="Search here...">
                            <option value="" selected disabled>Select user</option>
                        </select>
                    </div>

                    <div class="form-group col-sm-6 col-md-3">
                        <label asp-for="StartDate"></label>
                        <input name="startDate" class="form-control datetimepicker2" />
                    </div>

                    <div class="form-group col-sm-6 col-md-3">
                        <label asp-for="EndDate"></label>
                        <input name="endDate" class="form-control datetimepicker2" />
                    </div>
                    <div class="form-group col-sm-6 col-md-3">
                        <label asp-for="Actions"></label>
                        <select asp-for="Actions" class="mdb-select" multiple Searchable="Search here...">
                        
                        </select>
                    </div>
                    <div class="col-9 text-right">
                        <div style="height:23px;"></div>
                        <button type="submit" class="btn mr-0  btn-primary btn-md">
                            Search&nbsp;&nbsp;<i class="fas fa-search"></i>
                        </button>
                        <button type="button" class="btn btn-secondary btn-md" onclick="clearBTN()">
                            Clear&nbsp;&nbsp;<i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
            </form>

        </div>
    </div>
</div>
 <div id="divResult">

 </div>

 <div class="modal fade" id="auditDataModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
     <div class="modal-dialog" role="document">
         <div class="modal-content">
             <div class="modal-header">
                 <h4 class="modal-title">Data Audit</h4>
                  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                     <span aria-hidden="true">&times;</span>
                 </button>
             </div>
             <div class="modal-body">
                 <table id="old-data" class="table table-bordered">
                     <thead><tr><th class="text-center">Key</th><th class="text-center">Value</th></tr></thead>

                     <tbody></tbody>
                 </table>

             </div>
             <div class="modal-footer">
                 <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
             </div>

         </div>
     </div>
 </div>

<script>

    function getUsersPerDepart() {
        var department = $("#DepartmentIds").val();
         $('#Users').empty();
         $('#Users').append('<option class="default" value="" selected disabled>Select User</option>');

          $.ajax({
                url: `@Url.Action("GetAllUsers","Cycles")?department=${department}`,
              method: 'GET',
              async: false,
              success: response => {
                   var data = response.items;
                  if (data) {
                      if (data && data.length) {

                          data.forEach(d => {
                              $('#Users').append(`<option value="${d.id}">${d.name}</option>`);
                          });
                      }
                  }
              }
          });
    }

     function getAllDepartments() {
        $('#DepartmentIds').empty();
        $('#DepartmentIds').append('<option class="default" value="" selected disabled>Select Department</option>');

        $.ajax({
            url: '@Url.Action("GetAllDepartments", "Common")',
            method: 'GET',
            success: response => {
                if (response && response.length) {
                    response.forEach(j => {
                        $('#DepartmentIds').append(`<option value="${j.id}">${j.name}</option>`);
                    });
                }
            }
        });
    }

         function getAllAuditActions() {
             $('#Actions').empty();
             $('#Actions').append('<option class="default" value="" selected disabled>Select Action</option>');

        $.ajax({
            url: '@Url.Action("GetAllAuditAction", "Common")',
            method: 'GET',
            success: response => {
                if (response && response.length) {
                    response.forEach(j => {
                        $('#Actions').append(`<option value="${j.id}">${j.name}</option>`);
                    });
                }
            }
        });
    }
 

    function auditSearch(e) {
        if (e) {
            e.preventDefault();
            e.returnValue = false;
        }
        var form = $("#formSearchCycles").serialize();
         $.ajax({
            url: "/report/_AuditReport?" + form,
            type: "GET",
            success: (res) => {
                 if (res) {
                    $("#divResult").html(res);

                }
            },

        });
    }

</script>

<script>
    $(() => {
        getAllAuditActions();
        getAllDepartments();

        $("#DepartmentIds").change(function () {
            getUsersPerDepart();
        });

        $("#formSearchCycles").on("submit", auditSearch);
    });

</script>

<script>

    function ViewData(data) {
        $('#old-data tbody').empty();
        var obj =/* JSON.parse(*/data//);
        for (let [key, value] of Object.entries(obj)) {
            $('#old-data tbody').append('<tr><td class="text-center">' + key + '</td><td class="text-center">' + value + '</td></tr>');
        }
        $("#auditDataModal").modal("show");
    }
</script>

<!--reset feilds -->
<script>
    function clearBTN() {
        console.log("reset");
        $("#formSearchCycles").resetForm();
        $(".default").attr('selected', true);
        FilterCycles();
    }

</script>

<!-- Export Audit-->
<script>


    async function ExportAudit() {

        var now = moment().format();
        var form = $('#formSearchCycles').serialize();

         fetch('@Url.Action("ExportAuditReport")?' + form, {
             method: 'get',

            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        }).then(response => {
            return response.blob();
        }).then(blob => {
            if (!blob) {
                swal.fire({
                    icon: 'error',
                    text: 'No file to download',
                });
                return;
            } else if (!blob.size){
                swal.fire({
                    icon: 'error',
                    text: 'You don\'t have permission',
                });
                return;
            }
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.style.display = 'none';
            a.href = url;
            a.download = `Audit_${now}.xlsx`;
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
            }).catch(err => {
                swal.fire({
                icon: 'error',
                text: 'An error occured',
            });
        });
    }
</script>